<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ExtAspNet</name>
    </assembly>
    <members>
        <member name="T:Nii.JSON.JSONTokener">
            <summary>
            <para>
             A JSONTokener takes a source string and extracts characters and tokens from
             it. It is used by the JSONObject and JSONArray constructors to parse
             JSON source strings.
             </para>
             <para>
             Public Domain 2002 JSON.org
             @author JSON.org
             @version 0.1
             </para>
             <para>Ported to C# by Are Bjolseth, teleplan.no</para>
             <para>
             <list type="bullet">
             <item><description>Implement Custom exceptions</description></item>
             <item><description>Add unit testing</description></item>
             <item><description>Add log4net</description></item>
             </list>
             </para>
            </summary>
        </member>
        <member name="F:Nii.JSON.JSONTokener.myIndex">
            <summary>The index of the next character.</summary>
        </member>
        <member name="F:Nii.JSON.JSONTokener.mySource">
            <summary>The source string being tokenized.</summary>
        </member>
        <member name="M:Nii.JSON.JSONTokener.#ctor(System.String)">
            <summary>
            Construct a JSONTokener from a string.
            </summary>
            <param name="s">A source string.</param>
        </member>
        <member name="M:Nii.JSON.JSONTokener.back">
            <summary>
            Back up one character. This provides a sort of lookahead capability,
            so that you can test for a digit or letter before attempting to parse
            the next number or identifier.
            </summary>
        </member>
        <member name="M:Nii.JSON.JSONTokener.dehexchar(System.Char)">
            <summary>
            Get the hex value of a character (base16).
            </summary>
            <param name="c">
            A character between '0' and '9' or between 'A' and 'F' or
            between 'a' and 'f'.
            </param>
            <returns>An int between 0 and 15, or -1 if c was not a hex digit.</returns>
        </member>
        <member name="M:Nii.JSON.JSONTokener.more">
            <summary>
            Determine if the source string still contains characters that next() can consume.
            </summary>
            <returns>true if not yet at the end of the source.</returns>
        </member>
        <member name="M:Nii.JSON.JSONTokener.next">
            <summary>
            Get the next character in the source string.
            </summary>
            <returns>The next character, or 0 if past the end of the source string.</returns>
        </member>
        <member name="M:Nii.JSON.JSONTokener.next(System.Char)">
            <summary>
            Consume the next character, and check that it matches a specified character
            </summary>
            <param name="c">The character to match.</param>
            <returns>The character.</returns>
        </member>
        <member name="M:Nii.JSON.JSONTokener.next(System.Int32)">
            <summary>
            Get the next n characters.
            </summary>
            <param name="n">The number of characters to take.</param>
            <returns>A string of n characters.</returns>
        </member>
        <member name="M:Nii.JSON.JSONTokener.nextClean">
            <summary>
            Get the next char in the string, skipping whitespace
            and comments (slashslash and slashstar).
            </summary>
            <returns>A character, or 0 if there are no more characters.</returns>
        </member>
        <member name="M:Nii.JSON.JSONTokener.nextString(System.Char)">
            <summary>
            Return the characters up to the next close quote character.
            Backslash processing is done. The formal JSON format does not
            allow strings in single quotes, but an implementation is allowed to
            accept them.
            </summary>
            <param name="quote">The quoting character, either " or '</param>
            <returns>A String.</returns>
        </member>
        <member name="M:Nii.JSON.JSONTokener.nextTo(System.Char)">
            <summary>
            Get the text up but not including the specified character or the
            end of line, whichever comes first.
            </summary>
            <param name="d">A delimiter character.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:Nii.JSON.JSONTokener.nextTo(System.String)">
            <summary>
             Get the text up but not including one of the specified delimeter
             characters or the end of line, which ever comes first.
            </summary>
            <param name="delimiters">A set of delimiter characters.</param>
            <returns>A string, trimmed.</returns>
        </member>
        <member name="M:Nii.JSON.JSONTokener.nextObject">
            <summary>
            Get the next value as object. The value can be a Boolean, Double, Integer,
            JSONArray, JSONObject, or String, or the JSONObject.NULL object.
            </summary>
            <returns>An object.</returns>
        </member>
        <member name="M:Nii.JSON.JSONTokener.skipTo(System.Char)">
            <summary>
            Skip characters until the next character is the requested character.
            If the requested character is not found, no characters are skipped.
            </summary>
            <param name="to">A character to skip to.</param>
            <returns>
            The requested character, or zero if the requested character is not found.
            </returns>
        </member>
        <member name="M:Nii.JSON.JSONTokener.skipPast(System.String)">
            <summary>
            Skip characters until past the requested string.
            If it is not found, we are left at the end of the source.
            </summary>
            <param name="to">A string to skip past.</param>
        </member>
        <member name="M:Nii.JSON.JSONTokener.ToString">
            <summary>
            Make a printable string of this JSONTokener.
            </summary>
            <returns>" at character [myIndex] of [mySource]"</returns>
        </member>
        <member name="M:Nii.JSON.JSONTokener.unescape">
            <summary>
            Unescape the source text. Convert %hh sequences to single characters,
            and convert plus to space. There are Web transport systems that insist on
            doing unnecessary URL encoding. This provides a way to undo it.
            </summary>
        </member>
        <member name="M:Nii.JSON.JSONTokener.unescape(System.String)">
            <summary>
            Convert %hh sequences to single characters, and convert plus to space.
            </summary>
            <param name="s">A string that may contain plus and %hh sequences.</param>
            <returns>The unescaped string.</returns>
        </member>
        <member name="T:ExtAspNet.TabStrip">
            <summary>
            选项卡面板控件
            </summary>
        </member>
        <member name="T:ExtAspNet.BoxComponent">
            <summary>
            控件基类
            </summary>
        </member>
        <member name="T:ExtAspNet.Component">
            <summary>
            控件基类
            </summary>
        </member>
        <member name="T:ExtAspNet.ControlBase">
            <summary>
            Control base class for all ExtAspNet controls.
            </summary>
        </member>
        <member name="M:ExtAspNet.ControlBase.GetPostBackEventReference">
            <summary>
            Get JavaScript code to postback the page. For example: __doPostBack("btnChangeEnable","");
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ControlBase.GetPostBackEventReference(System.String)">
            <summary>
            Get JavaScript code to postback the page. For example: __doPostBack('btnChangeEnable','');
            </summary>
            <param name="argument"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ControlBase.GetSetHiddenFieldValueScript(System.String,System.String)">
            <summary>
            修改隐藏表单字段值的脚本（如果此隐藏表单字段不存在，则添加）
            </summary>
            <param name="id"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ControlBase.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            RenderBeginTag - 模拟 WebControl 的行为 - 不错 - sanshi.ustc@gmail.com
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:ExtAspNet.ControlBase.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            RenderEndTag- 模拟 WebControl 的行为 - 不错 - sanshi.ustc@gmail.com
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:ExtAspNet.ControlBase.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            重载 RenderControl ，以在当前控件外围包含一个 div 层
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:ExtAspNet.ControlBase.PropertyModified(System.String)">
            <summary>
            Whether the property has been changed in current postback.
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ControlBase.PropertyModified(System.String[])">
            <summary>
            Whether the property has been changed in current postback.
            If any of the properties has been changed, return true.
            </summary>
            <param name="propertyNames"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ControlBase.OnPreRender(System.EventArgs)">
            <summary>
            Pre-render the page.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ExtAspNet.ControlBase.OnAjaxPreRender">
            <summary>
            Pre-render the page in ExtAspNet ajax postback time.
            </summary>
        </member>
        <member name="M:ExtAspNet.ControlBase.OnFirstPreRender">
            <summary>
            Pre-render the page in page's first load time or normal POSTBACK time.
            </summary>
        </member>
        <member name="M:ExtAspNet.ControlBase.ConvertPropertiesToXState(System.Collections.Generic.List{System.String})">
            <summary>
            Get X_STATE object from property name list.
            </summary>
            <param name="propertyList"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ControlBase.GetHiddenPropertyChangedScript">
            <summary>
            In ExtAspNet ajax request, the Hidden property has been changed.
            Some controls may have a different Hidden logic, for example the Window control.
            </summary>
        </member>
        <member name="M:ExtAspNet.ControlBase.GetResolvedIconUrl(ExtAspNet.Icon,System.String)">
            <summary>
            Get resolved icon url (Can be used in client side) from both Icon and IconUrl properties.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ExtAspNet.ControlBase.XState">
            <summary>
            XState is used to persist control states between server and client.
            </summary>
        </member>
        <member name="P:ExtAspNet.ControlBase.RenderWrapperNode">
            <summary>
            是否输出控件的包裹DIV到页面中
            否：只创建Javascript对象而不添加到页面中
            是：创建Javascript对象，并添加到页面中，页面上添加占位符
            </summary>
        </member>
        <member name="P:ExtAspNet.ControlBase.OB">
            <summary>
            参数对象创建器
            </summary>
        </member>
        <member name="P:ExtAspNet.ControlBase.ClientID">
            <summary>
            ClientID
            </summary>
        </member>
        <member name="P:ExtAspNet.ControlBase.WrapperID">
            <summary>
            WrapperID
            </summary>
        </member>
        <member name="P:ExtAspNet.ControlBase.EnableViewState">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.ControlBase.Visible">
            <summary>
            不支持此属性
            请使用 Hidden 属性
            </summary>
        </member>
        <member name="P:ExtAspNet.ControlBase.Enabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:ExtAspNet.ControlBase.Hidden">
            <summary>
            是否隐藏
            </summary>
        </member>
        <member name="P:ExtAspNet.ControlBase.HideMode">
            <summary>
            隐藏的模式
            </summary>
        </member>
        <member name="P:ExtAspNet.ControlBase.PostBackState">
            <summary>
            JSON object parsed from Request.Form["X_STATE"]
            For example the Request.Form["X_STATE"] = {"btnClientClick":{"OnClientClick":"X.util.alert(\"This is an alert dialog\",\"\",Ext.MessageBox.INFO,'');"},"btnPressed":{"Pressed":false}}
            And this control is "btnPressed", then PostBackState is: {"Pressed":false}
            </summary>
        </member>
        <member name="M:ExtAspNet.Component.Focus">
            <summary>
            Focus the control.
            </summary>
        </member>
        <member name="M:ExtAspNet.Component.Focus(System.Boolean)">
            <summary>
            Focus the control.
            </summary>
            <param name="selectText">If applicable, true to also select the text in this component.</param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Component.Focus(System.Boolean,System.Int32)">
            <summary>
            Focus the control.
            </summary>
            <param name="selectText">If applicable, true to also select the text in this component.</param>
            <param name="delayMilliseconds">Delay the focus this number of milliseconds.</param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Component.GetFocusReference">
            <summary>
            Focus the control javascript reference.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Component.GetFocusReference(System.Boolean)">
            <summary>
            Focus the control javascript reference.
            </summary>
            <param name="selectText">If applicable, true to also select the text in this component.</param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Component.GetFocusReference(System.Boolean,System.Int32)">
            <summary>
            Focus the control javascript reference.
            </summary>
            <param name="selectText">If applicable, true to also select the text in this component.</param>
            <param name="delayMilliseconds">Delay the focus this number of milliseconds.</param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Component.AddExtraStyle(System.String,System.String)">
            <summary>
            为已经添加到OB中的Style增加新的样式
            注意：这个key-value不会保存到属性CssStyle中
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="P:ExtAspNet.Component.FocusOnPageLoad">
            <summary>
            页面加载后立即获得焦点
            </summary>
        </member>
        <member name="P:ExtAspNet.Component.CssClass">
            <summary>
            控件样式类
            </summary>
        </member>
        <member name="P:ExtAspNet.Component.CssStyle">
            <summary>
            控件样式
            </summary>
        </member>
        <member name="P:ExtAspNet.BoxComponent.Width">
            <summary>
            宽度
            </summary>
        </member>
        <member name="P:ExtAspNet.BoxComponent.Height">
            <summary>
            高度
            </summary>
        </member>
        <member name="P:ExtAspNet.Container.FocusOnPageLoad">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Container.Layout">
            <summary>
            布局类型
            </summary>
        </member>
        <member name="P:ExtAspNet.Container.AnchorValue">
            <summary>
            锚点值
            </summary>
        </member>
        <member name="P:ExtAspNet.Container.ColumnWidth">
            <summary>
            列的宽度
            </summary>
        </member>
        <member name="P:ExtAspNet.Container.RowHeight">
            <summary>
            行的宽度
            </summary>
        </member>
        <member name="P:ExtAspNet.Container.AbsoluteX">
            <summary>
            AbsoluteX
            </summary>
        </member>
        <member name="P:ExtAspNet.Container.AbsoluteY">
            <summary>
            AbsoluteY
            </summary>
        </member>
        <member name="P:ExtAspNet.PanelBase.AutoHeight">
            <summary>
            是否自动高度
            </summary>
        </member>
        <member name="P:ExtAspNet.PanelBase.AutoWidth">
            <summary>
            是否自动宽度
            </summary>
        </member>
        <member name="P:ExtAspNet.PanelBase.AutoScroll">
            <summary>
            是否自动滚动
            </summary>
        </member>
        <member name="P:ExtAspNet.PanelBase.EnableLargeHeader">
            <summary>
            使用大的标题栏
            </summary>
        </member>
        <member name="P:ExtAspNet.PanelBase.EnableLightBackgroundColor">
            <summary>
            是否显示浅色的背景色
            </summary>
        </member>
        <member name="P:ExtAspNet.PanelBase.EnableBackgroundColor">
            <summary>
            是否显示背景色，目前仅Blue和Gray两个Theme支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.PanelBase.BodyStyle">
            <summary>
            内容区域的样式
            </summary>
        </member>
        <member name="P:ExtAspNet.PanelBase.BodyPadding">
            <summary>
            内容区域的内边距，字符串类型，可以设置上下左右的内边距，比如'0px 5px'或'5px 10px 2px 2px'
            </summary>
        </member>
        <member name="P:ExtAspNet.PanelBase.ShowBorder">
            <summary>
            是否显示边框
            </summary>
        </member>
        <member name="P:ExtAspNet.PanelBase.IconUrl">
            <summary>
            图标地址
            </summary>
        </member>
        <member name="P:ExtAspNet.PanelBase.Icon">
            <summary>
            预定义图标
            </summary>
        </member>
        <member name="P:ExtAspNet.PanelBase.Toolbars">
            <summary>
            工具栏控件
            </summary>
        </member>
        <member name="P:ExtAspNet.PanelBase.Items">
            <summary>
            子控件
            </summary>
        </member>
        <member name="P:ExtAspNet.PanelBase.IFrameUrl">
            <summary>
            IFrame的地址
            </summary>
        </member>
        <member name="P:ExtAspNet.PanelBase.IFrameName">
            <summary>
            IFrame的名称
            </summary>
        </member>
        <member name="P:ExtAspNet.PanelBase.EnableIFrame">
            <summary>
            是否启用IFrame
            </summary>
        </member>
        <member name="M:ExtAspNet.TabStrip.GetAddTabReference(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Add a tab dynamicly.
            Note: Tabs added in this manner will not be persisted in server-side.
            </summary>
            <param name="tabID"></param>
            <param name="iframeUrl"></param>
            <param name="tabTitle"></param>
            <param name="enableClose"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.TabStrip.GetAddTabReference(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Add a tab dynamicly.
            </summary>
            <param name="tabID"></param>
            <param name="iframeUrl"></param>
            <param name="tabTitle"></param>
            <param name="iconUrl"></param>
            <param name="enableClose"></param>
            <returns></returns>
        </member>
        <member name="P:ExtAspNet.TabStrip.Items">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.TabStrip.EnableIFrame">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.TabStrip.IFrameUrl">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.TabStrip.IFrameName">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.TabStrip.Layout">
            <summary>
            布局类型
            </summary>
        </member>
        <member name="P:ExtAspNet.TabStrip.EnableLightBackgroundColor">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.TabStrip.EnableBackgroundColor">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.TabStrip.AutoPostBack">
            <summary>
            是否自动回发（切换Tab）
            </summary>
        </member>
        <member name="P:ExtAspNet.TabStrip.EnableTitleBackgroundColor">
            <summary>
            显示标题的背景颜色
            </summary>
        </member>
        <member name="P:ExtAspNet.TabStrip.EnableTabCloseMenu">
            <summary>
            是否启用右键菜单 - 可用来关闭当前Tab和所有其他Tab
            </summary>
        </member>
        <member name="P:ExtAspNet.TabStrip.TabPosition">
            <summary>
            选项卡显示的位置
            </summary>
        </member>
        <member name="P:ExtAspNet.TabStrip.EnableDeferredRender">
            <summary>
            是否启用延迟加载选项卡
            </summary>
        </member>
        <member name="P:ExtAspNet.TabStrip.ActiveTabIndex">
            <summary>
            当前激活的选项卡序号
            </summary>
        </member>
        <member name="M:ExtAspNet.GridColumn.GetColumnValue(ExtAspNet.GridRow)">
            <summary>
            取得列的计算值
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.GridColumn.GetTooltipString(ExtAspNet.GridRow)">
            <summary>
            取得提示字符串
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="P:ExtAspNet.LinkButtonField.ValidateTarget">
            <summary>
            验证失败时提示对话框弹出位置
            </summary>
        </member>
        <member name="P:ExtAspNet.LinkButtonField.ConfirmTarget">
            <summary>
            确认对话框弹出位置
            </summary>
        </member>
        <member name="T:ExtAspNet.RadioButtonList">
            <summary>
            单选框列表控件
            </summary>
        </member>
        <member name="T:ExtAspNet.Field">
            <summary>
            字段基类
            </summary>
        </member>
        <member name="M:ExtAspNet.Field.GetValueReference">
            <summary>
            取得此字段的值
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Field.GetDesignTimeHtml(System.String)">
            <summary>
            取得设计时
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="P:ExtAspNet.Field.ShowLabel">
            <summary>
            是否显示标签
            </summary>
        </member>
        <member name="P:ExtAspNet.Field.Label">
            <summary>
            标签
            </summary>
        </member>
        <member name="P:ExtAspNet.Field.ShowRedStar">
            <summary>
            在标签后面显示红色的星号（用来标识必填项）
            </summary>
        </member>
        <member name="P:ExtAspNet.Field.Readonly">
            <summary>
            设置文本框只读
            </summary>
        </member>
        <member name="P:ExtAspNet.Field.TabIndex">
            <summary>
            序号
            </summary>
        </member>
        <member name="P:ExtAspNet.Field.OffsetRight">
            <summary>
            距离右侧边界的宽度（一般用来显示提示图标）
            </summary>
        </member>
        <member name="M:ExtAspNet.RadioButtonList.DataBind">
            <summary>
            Bind to datasource.
            </summary>
        </member>
        <member name="M:ExtAspNet.RadioButtonList.DataBindToDataTable(System.Data.DataTable)">
            <summary>
            Bind to a datatable.
            </summary>
            <param name="dataView"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
        </member>
        <member name="M:ExtAspNet.RadioButtonList.DataBindToEnumerable(System.Collections.IEnumerable)">
            <summary>
            Bind to an enumerable list.
            </summary>
            <param name="enumerable"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
        </member>
        <member name="M:ExtAspNet.RadioButtonList.GetPropertyValue(System.Object,System.String)">
            <summary>
            取得属性值
            </summary>
            <param name="obj"></param>
            <param name="propertyName"></param>
        </member>
        <member name="P:ExtAspNet.RadioButtonList.AutoPostBack">
            <summary>
            是否自动回发
            </summary>
        </member>
        <member name="P:ExtAspNet.RadioButtonList.Checked">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="P:ExtAspNet.RadioButtonList.ColumnNumber">
            <summary>
            渲染成几列
            </summary>
        </member>
        <member name="P:ExtAspNet.RadioButtonList.DataTextField">
            <summary>
            显示文本字段
            </summary>
        </member>
        <member name="P:ExtAspNet.RadioButtonList.DataTextFormatString">
            <summary>
            显示文本的格式化字符串
            </summary>
        </member>
        <member name="P:ExtAspNet.RadioButtonList.DataValueField">
            <summary>
            显示值字段
            </summary>
        </member>
        <member name="P:ExtAspNet.RadioButtonList.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="P:ExtAspNet.RadioButtonList.SelectedValue">
            <summary>
            选中项的值
            </summary>
        </member>
        <member name="P:ExtAspNet.RadioButtonList.SelectedIndex">
            <summary>
            选中项的序号
            </summary>
        </member>
        <member name="P:ExtAspNet.RadioButtonList.SelectedItem">
            <summary>
            选中项
            </summary>
        </member>
        <member name="E:ExtAspNet.RadioButtonList.SelectedIndexChanged">
            <summary>
            SelectedValue changed event.
            </summary>
        </member>
        <member name="P:ExtAspNet.MenuItem.IconUrl">
            <summary>
            图标地址
            </summary>
        </member>
        <member name="P:ExtAspNet.MenuItem.Icon">
            <summary>
            预定义图标
            </summary>
        </member>
        <member name="P:ExtAspNet.MenuButton.EnablePostBack">
            <summary>
            是否可以回发
            </summary>
        </member>
        <member name="P:ExtAspNet.MenuButton.OnClientClick">
            <summary>
            点击按钮时需要执行的客户端脚本
            </summary>
        </member>
        <member name="P:ExtAspNet.MenuButton.ValidateForms">
            <summary>
            提交之前需要验证的表单名称列表
            </summary>
        </member>
        <member name="P:ExtAspNet.MenuButton.ValidateTarget">
            <summary>
            验证失败时提示对话框弹出位置
            </summary>
        </member>
        <member name="P:ExtAspNet.MenuButton.ConfirmTitle">
            <summary>
            确认对话框标题
            </summary>
        </member>
        <member name="P:ExtAspNet.MenuButton.ConfirmText">
            <summary>
            确认对话框内容
            </summary>
        </member>
        <member name="P:ExtAspNet.MenuButton.ConfirmIcon">
            <summary>
            确认对话框提示图标
            </summary>
        </member>
        <member name="P:ExtAspNet.MenuButton.ConfirmTarget">
            <summary>
            确认对话框弹出位置
            </summary>
        </member>
        <member name="T:ExtAspNet.ControlBaseDesigner">
            <summary>
            设计时支持
            </summary>
        </member>
        <member name="M:ExtAspNet.ControlBaseDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            初始化控件设计时
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:ExtAspNet.ControlBaseDesigner.GetDesignTimeHtml">
            <summary>
            设计时展示
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ControlBaseDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>
            出错时设计时显示
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="P:ExtAspNet.ControlBaseDesigner.CurrentControl">
            <summary>
            当前呈现的控件
            </summary>
        </member>
        <member name="M:ExtAspNet.StringUtil.StripHtml(System.String)">
            <summary>
            去除字符串中的Html
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.StringUtil.GetIntListFromString(System.String)">
            <summary>
            由字符串"1,2,3"转化为整形列表[1,2,3]
            </summary>
            <param name="postValue"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.StringUtil.GetStringListFromString(System.String)">
            <summary>
            由字符串"ssdd,2,ok"转化为字符串列表["ssdd","2","ok"]
            </summary>
            <param name="postValue"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.StringUtil.GetStringFromStringArray(System.String[])">
            <summary>
            由字符串数组["ssdd","2","ok"]转化为字符串"ssdd,2,ok"
            </summary>
            <param name="postValue"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.StringUtil.GetStringFromIntArray(System.Int32[])">
            <summary>
            由整型数组[2,3,4]转化为字符串"2,3,4"
            </summary>
            <param name="postValue"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.StringUtil.CompareIntArray(System.Int32[],System.Int32[])">
            <summary>
            比较两个整形数组是否相等
            </summary>
            <param name="array1"></param>
            <param name="array2"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.StringUtil.CompareStringArray(System.String[],System.String[])">
            <summary>
            比较两个字符串数组是否相等
            </summary>
            <param name="array1"></param>
            <param name="array2"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.StringUtil.ConvertPercentageToDecimalString(System.String)">
            <summary>
            将 10% 转换为 0.1 的字符串的形式
            </summary>
            <param name="percentageStr"></param>
            <returns></returns>
        </member>
        <member name="T:ExtAspNet.SimulateTreeNode">
            <summary>
            模拟树结构的节点类
            </summary>
        </member>
        <member name="P:ExtAspNet.SimulateTreeNode.SimulateTreeText">
            <summary>
            模拟树的节点内容
            </summary>
        </member>
        <member name="P:ExtAspNet.SimulateTreeNode.Text">
            <summary>
            节点内容
            </summary>
        </member>
        <member name="P:ExtAspNet.SimulateTreeNode.Value">
            <summary>
            节点内容
            </summary>
        </member>
        <member name="P:ExtAspNet.SimulateTreeNode.Level">
            <summary>
            节点所在层次（从0开始，0表示根节点）
            </summary>
        </member>
        <member name="P:ExtAspNet.SimulateTreeNode.ParentNode">
            <summary>
            父节点
            </summary>
        </member>
        <member name="P:ExtAspNet.SimulateTreeNode.HasLittleBrother">
            <summary>
            是否有弟节点
            </summary>
        </member>
        <member name="T:ExtAspNet.WindowPosition">
            <summary>
            窗口的位置
            </summary>
        </member>
        <member name="T:ExtAspNet.Icon">
            <summary>
            预定义图标
            </summary>
        </member>
        <member name="T:ExtAspNet.IconHelper">
            <summary>
            预定义图标名称
            </summary>
        </member>
        <member name="T:ExtAspNet.Button">
            <summary>
            按钮控件
            </summary>
        </member>
        <member name="M:ExtAspNet.Button.ResolveClientScript(System.String[],ExtAspNet.Target,System.Boolean,System.String,System.String,System.String,ExtAspNet.MessageBoxIcon,ExtAspNet.Target,System.String,System.String)">
            <summary>
            Generate client click javascript code for the button.
            </summary>
            <param name="validateForms"></param>
            <param name="enablePostBack"></param>
            <param name="postBackEventReference"></param>
            <param name="confirmText"></param>
            <param name="confirmTitle"></param>
            <param name="confirmIcon"></param>
            <param name="onClientClick"></param>
            <returns></returns>
        </member>
        <member name="P:ExtAspNet.Button.DisableControlBeforePostBack">
            <summary>
            回发之前禁用按钮，防止重复提交
            </summary>
        </member>
        <member name="P:ExtAspNet.Button.EnablePostBack">
            <summary>
            是否可以回发
            </summary>
        </member>
        <member name="P:ExtAspNet.Button.Pressed">
            <summary>
            是否被按下
            </summary>
        </member>
        <member name="P:ExtAspNet.Button.EnablePress">
            <summary>
            是否可以按下
            </summary>
        </member>
        <member name="P:ExtAspNet.Button.OnClientClick">
            <summary>
            点击按钮时需要执行的客户端脚本
            </summary>
        </member>
        <member name="P:ExtAspNet.Button.Icon">
            <summary>
            预定义图标
            </summary>
        </member>
        <member name="P:ExtAspNet.Button.IconUrl">
            <summary>
            图标地址
            </summary>
        </member>
        <member name="P:ExtAspNet.Button.Text">
            <summary>
            The button text to be used as innerHTML (html tags are accepted)
            </summary>
        </member>
        <member name="P:ExtAspNet.Button.ToolTip">
            <summary>
            提示文本
            </summary>
        </member>
        <member name="P:ExtAspNet.Button.ToolTipType">
            <summary>
            提示文本类型
            </summary>
        </member>
        <member name="P:ExtAspNet.Button.TabIndex">
            <summary>
            序号
            </summary>
        </member>
        <member name="P:ExtAspNet.Button.Type">
            <summary>
            按钮类型
            </summary>
        </member>
        <member name="P:ExtAspNet.Button.ValidateForms">
            <summary>
            需要验证的表单名称列表，逗号分隔
            </summary>
        </member>
        <member name="P:ExtAspNet.Button.ValidateTarget">
            <summary>
            验证失败时提示对话框弹出位置
            </summary>
        </member>
        <member name="P:ExtAspNet.Button.ConfirmTitle">
            <summary>
            确认对话框标题
            </summary>
        </member>
        <member name="P:ExtAspNet.Button.ConfirmText">
            <summary>
            确认对话框内容
            </summary>
        </member>
        <member name="P:ExtAspNet.Button.ConfirmIcon">
            <summary>
            确认对话框提示图标
            </summary>
        </member>
        <member name="P:ExtAspNet.Button.ConfirmTarget">
            <summary>
            确认对话框弹出位置
            </summary>
        </member>
        <member name="P:ExtAspNet.Button.Menus">
            <summary>
            按钮的上下文菜单
            </summary>
        </member>
        <member name="E:ExtAspNet.Button.Click">
            <summary>
            点击按钮事件
            </summary>
        </member>
        <member name="T:ExtAspNet.DatePicker">
            <summary>
            日期选择框控件
            </summary>
        </member>
        <member name="T:ExtAspNet.RealTextField">
            <summary>
            具有Text属性的输入框
            </summary>
        </member>
        <member name="M:ExtAspNet.TextField.MarkInvalid(System.String)">
            <summary>
            Set field invalid message.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ExtAspNet.TextField.ClearInvalid">
            <summary>
            Clear field invalid message.
            </summary>
        </member>
        <member name="M:ExtAspNet.TextField.GetMarkInvalidReference(System.String)">
            <summary>
            Set field invalid message.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.TextField.GetClearInvalidReference">
            <summary>
            Clear field invalid message.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ExtAspNet.TextField.Required">
            <summary>
            是否必填项
            </summary>
        </member>
        <member name="P:ExtAspNet.TextField.RequiredMessage">
            <summary>
            为空时提示信息
            </summary>
        </member>
        <member name="P:ExtAspNet.TextField.MaxLength">
            <summary>
            最大长度
            </summary>
        </member>
        <member name="P:ExtAspNet.TextField.MaxLengthMessage">
            <summary>
            最大长度时提示信息
            </summary>
        </member>
        <member name="P:ExtAspNet.TextField.MinLength">
            <summary>
            最小长度
            </summary>
        </member>
        <member name="P:ExtAspNet.TextField.MinLengthMessage">
            <summary>
            最小长度时提示信息
            </summary>
        </member>
        <member name="P:ExtAspNet.TextField.RegexPattern">
            <summary>
            RegexPattern
            </summary>
        </member>
        <member name="P:ExtAspNet.TextField.Regex">
            <summary>
            正则表达式
            </summary>
        </member>
        <member name="P:ExtAspNet.TextField.RegexMessage">
            <summary>
            不满足正则表达式时提示信息
            </summary>
        </member>
        <member name="P:ExtAspNet.TextField.CompareControl">
            <summary>
            需要比较的控件
            </summary>
        </member>
        <member name="P:ExtAspNet.TextField.CompareValue">
            <summary>
            需要比较的值
            </summary>
        </member>
        <member name="P:ExtAspNet.TextField.CompareOperator">
            <summary>
            比较操作符
            </summary>
        </member>
        <member name="P:ExtAspNet.TextField.CompareType">
            <summary>
            比较的类型
            </summary>
        </member>
        <member name="P:ExtAspNet.TextField.CompareMessage">
            <summary>
            不满足比较条件时提示信息
            </summary>
        </member>
        <member name="P:ExtAspNet.TextField.NextFocusControl">
            <summary>
            下一步获得焦点的控件（响应回车事件）
            </summary>
        </member>
        <member name="P:ExtAspNet.RealTextField.EmptyText">
            <summary>
            文本框为空时显示的文本
            </summary>
        </member>
        <member name="P:ExtAspNet.RealTextField.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:ExtAspNet.RealTextField.AutoPostBack">
            <summary>
            是否自动回发（文本值改变）
            </summary>
        </member>
        <member name="E:ExtAspNet.RealTextField.TextChanged">
            <summary>
            文本改变事件（需要启用AutoPostBack）
            </summary>
        </member>
        <member name="P:ExtAspNet.DatePicker.SelectedDate">
            <summary>
            选择的日期
            </summary>
        </member>
        <member name="P:ExtAspNet.DatePicker.DateFormatString">
            <summary>
            日期格式
            </summary>
        </member>
        <member name="P:ExtAspNet.DatePicker.MaxDate">
            <summary>
            最大日期
            </summary>
        </member>
        <member name="P:ExtAspNet.DatePicker.MinDate">
            <summary>
            最小日期
            </summary>
        </member>
        <member name="T:ExtAspNet.SimpleForm">
            <summary>
            简单的表单容器控件
            </summary>
        </member>
        <member name="P:ExtAspNet.CollapsablePanel.Expanded">
            <summary>
            是否展开
            </summary>
        </member>
        <member name="P:ExtAspNet.CollapsablePanel.Collapsed">
            <summary>
            是否折叠
            </summary>
        </member>
        <member name="P:ExtAspNet.CollapsablePanel.EnableCollapse">
            <summary>
            是否允许折叠
            </summary>
        </member>
        <member name="P:ExtAspNet.CollapsablePanel.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:ExtAspNet.CollapsablePanel.ShowHeader">
            <summary>
            是否显示标题栏
            </summary>
        </member>
        <member name="P:ExtAspNet.SimpleForm.EnableIFrame">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.SimpleForm.IFrameUrl">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.SimpleForm.IFrameName">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.SimpleForm.Layout">
            <summary>
            布局类型
            </summary>
        </member>
        <member name="P:ExtAspNet.SimpleForm.LabelWidth">
            <summary>
            标签的宽度
            </summary>
        </member>
        <member name="P:ExtAspNet.GridRowClickEventArgs.RowIndex">
            <summary>
            行序号
            </summary>
        </member>
        <member name="P:ExtAspNet.GridRowEventArgs.Values">
            <summary>
            各列的值
            </summary>
        </member>
        <member name="P:ExtAspNet.GridRowEventArgs.DataItem">
            <summary>
            此行的数据源
            </summary>
        </member>
        <member name="P:ExtAspNet.GridRowEventArgs.RowIndex">
            <summary>
            行序号
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlParseError">
            <summary>
            Represents a parsing error found during document parsing.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlParseError.Code">
            <summary>
            Gets the type of error.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlParseError.Line">
            <summary>
            Gets the line number of this error in the document.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlParseError.LinePosition">
            <summary>
            Gets the column number of this error in the document.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlParseError.StreamPosition">
            <summary>
            Gets the absolute stream position of this error in the document, relative to the start of the document.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlParseError.SourceText">
            <summary>
            Gets the the full text of the line containing the error.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlParseError.Reason">
            <summary>
            Gets a description for the error.
            </summary>
        </member>
        <member name="T:ExtAspNet.Rectangle">
            <summary>
            自定义矩形
            </summary>
        </member>
        <member name="M:ExtAspNet.StyleUtil.GetSingleStyleFormCSS(System.String,System.String)">
            <summary>
            从字符串“padding:5px;background-color:#DFE8F6;”中提取“background-color:#DFE8F6;”
            </summary>
            <param name="css"></param>
            <param name="styleName"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.StyleUtil.ResolvePadding(System.String)">
            <summary>
            将Padding或Margin值提取出来
            </summary>
            <param name="paddingOrMargin"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ResponseFilter.ResolveWriter(System.IO.TextWriter)">
            <summary>
            Write content to output stream.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:ExtAspNet.ResponseFilter.GetEnableTargetControlScript">
            <summary>
            设置引起本次回发的按钮（或其他控件）可用
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:ExtAspNet.ResponseFilter.UpdateEventValidation(System.IO.TextWriter,HtmlAgilityPack.HtmlDocument)">
            <summary>
            更新 EventValidation 节点的值
            </summary>
            <param name="writer"></param>
            <param name="completeHtml"></param>
        </member>
        <member name="M:ExtAspNet.ResponseFilter.UpdateViewState(System.IO.TextWriter,HtmlAgilityPack.HtmlDocument)">
            <summary>
            更新 ViewState 节点的值
            </summary>
            <param name="writer"></param>
            <param name="completeHtml"></param>
        </member>
        <member name="M:ExtAspNet.ResponseFilter.UpdateASPNETControls(System.IO.TextWriter,HtmlAgilityPack.HtmlDocument)">
            <summary>
            更新ASP.NET控件
            </summary>
            <param name="writer"></param>
            <param name="doc"></param>
        </member>
        <member name="M:ExtAspNet.ResponseFilter.GetHtmlNodeValue(System.String,HtmlAgilityPack.HtmlDocument)">
            <summary>
            取得 HTML 中一个节点的值
            </summary>
            <param name="nodeId"></param>
            <param name="doc"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ResponseFilter.GetHtmlNodeOuterHTML(System.String,HtmlAgilityPack.HtmlDocument)">
            <summary>
            取得 HTML 中一个节点的OuterHtml
            </summary>
            <param name="nodeId"></param>
            <param name="doc"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ResponseFilter.GetCompleteHtml">
            <summary>
            获取当前输出流的HTML内容
            </summary>
            <returns></returns>
        </member>
        <member name="T:ExtAspNet.DesignTimeResourceHelper">
            <summary>
            注册设计时资源
            </summary>
        </member>
        <member name="M:ExtAspNet.DesignTimeResourceHelper.GetInstance(System.ComponentModel.ISite)">
            <summary>
            取得 DesignTimeResourceHelper 的实例，单件模式
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.DesignTimeResourceHelper.GetHiddenControl(System.String)">
            <summary>
            设计时是否包含控件
            </summary>
            <param name="componentID"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.DesignTimeResourceHelper.GetInlineStyle">
            <summary>
            取得内联样式表
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.DesignTimeResourceHelper.GetStyleContent(System.String)">
            <summary>
            取得样式的内容
            </summary>
            <param name="resourceName"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.DesignTimeResourceHelper.ParseCssWebResourceUrls(System.String)">
            <summary>
            转化 CSS 的内容
            </summary>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="T:ExtAspNet.CloseAction">
            <summary>
            关闭窗体的动作
            </summary>
        </member>
        <member name="T:ExtAspNet.CloseActionName">
            <summary>
            关闭窗体的动作
            </summary>
        </member>
        <member name="T:ExtAspNet.Target">
            <summary>
            Alert,Confirm,Window显示的位置
            </summary>
        </member>
        <member name="T:ExtAspNet.TargetHelper">
            <summary>
            Alert,Confirm,Window显示的位置
            </summary>
        </member>
        <member name="M:ExtAspNet.TargetHelper.GetScriptName(ExtAspNet.Target)">
            <summary>
            Get target name used inside JavaScript code.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:ExtAspNet.ControlBaseCollection">
            <summary>
            This Collection should always in the first place of Controls, Other Collections will be followed, for example Toolbars.
            </summary>
        </member>
        <member name="T:ExtAspNet.TextBox">
            <summary>
            文本框控件
            </summary>
        </member>
        <member name="P:ExtAspNet.TextBox.TextMode">
            <summary>
            文本框类型
            </summary>
        </member>
        <member name="T:ExtAspNet.ConfigSectionName">
            <summary>
            配置字段名称
            </summary>
        </member>
        <member name="T:ExtAspNet.ConfigPropertyName">
            <summary>
            字段属性名称
            </summary>
        </member>
        <member name="T:ExtAspNet.ConfigPropertyValue">
            <summary>
            字段属性值
            </summary>
        </member>
        <member name="T:ExtAspNet.CategoryName">
            <summary>
            属性分类的名称
            </summary>
        </member>
        <member name="F:ExtAspNet.CategoryName.ABOUT">
            <summary>
            关于
            </summary>
        </member>
        <member name="F:ExtAspNet.CategoryName.BASEOPTIONS">
            <summary>
            基本属性
            </summary>
        </member>
        <member name="F:ExtAspNet.CategoryName.OPTIONS">
            <summary>
            属性
            </summary>
        </member>
        <member name="F:ExtAspNet.CategoryName.VALIDATION">
            <summary>
            表单验证
            </summary>
        </member>
        <member name="F:ExtAspNet.CategoryName.LAYOUT">
            <summary>
            布局
            </summary>
        </member>
        <member name="F:ExtAspNet.CategoryName.ACTION">
            <summary>
            事件
            </summary>
        </member>
        <member name="T:ExtAspNet.MessageBoxIcon">
            <summary>
            消息框图标类型
            </summary>
        </member>
        <member name="T:ExtAspNet.MessageBoxIconHelper">
            <summary>
            消息框图标类型名称
            </summary>
        </member>
        <member name="M:ExtAspNet.JsHelper.GetStringWithJsBlock(System.String)">
            <summary>
            取得包含JS代码块的字符串
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.JsHelper.GetJsStringArray(System.String[])">
            <summary>
            返回字符串数组的js表示
            </summary>
            <param name="strs"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.JsHelper.GetJsIntArray(System.Int32[])">
            <summary>
            返回整形数组的js表示
            </summary>
            <param name="strs"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.JsHelper.Enquote(System.String)">
            <summary>
            Produce a string in double quotes with backslash sequences in all the right places.
            
            常用的用法：String.Format("{0}.setValue({1});", ClientJavascriptID, JsHelper.Enquote(Text))
            
            </summary>
            <param name="s">A String</param>
            <returns>A String correctly formatted for insertion in a JSON message.</returns>
        </member>
        <member name="M:ExtAspNet.JsHelper.NumberToString(System.Object)">
            <summary>
            Produce a string from a number.
            </summary>
            <param name="number">Number value type object</param>
            <returns>String representation of the number</returns>
        </member>
        <member name="M:ExtAspNet.CheckBoxField.GetColumnValue(ExtAspNet.GridRow,System.Boolean)">
            <summary>
            取得单元格的数据
            </summary>
            <param name="row"></param>
            <param name="checkState"></param>
            <returns></returns>
        </member>
        <member name="P:ExtAspNet.CheckBoxField.AutoPostBack">
            <summary>
            是否自动回发
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeExpandEventArgs.Node">
            <summary>
            Tree node.
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeExpandEventArgs.NodeID">
            <summary>
            Tree node id.
            </summary>
        </member>
        <member name="P:ExtAspNet.RadioItem.Selected">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="P:ExtAspNet.RadioItem.Text">
            <summary>
            显示的文本
            </summary>
        </member>
        <member name="P:ExtAspNet.RadioItem.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="T:ExtAspNet.ToolbarCollection">
            <summary>
            This collection is in the second place of Controls(Items -> Toolbars). 
            </summary>
        </member>
        <member name="M:ExtAspNet.ToolbarCollection.GetStartIndex">
            <summary>
            Calculate the start index of Toolbars in base.Controls collection.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HtmlAgilityPack.HtmlAttributeCollection">
            <summary>
            Represents a combined list and collection of HTML nodes.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.HtmlAttributeCollection.Append(HtmlAgilityPack.HtmlAttribute)">
            <summary>
            Inserts the specified attribute as the last attribute in the collection.
            </summary>
            <param name="newAttribute">The attribute to insert. May not be null.</param>
            <returns>The appended attribute.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlAttributeCollection.Append(System.String)">
            <summary>
            Creates and inserts a new attribute as the last attribute in the collection.
            </summary>
            <param name="name">The name of the attribute to insert.</param>
            <returns>The appended attribute.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlAttributeCollection.Append(System.String,System.String)">
            <summary>
            Creates and inserts a new attribute as the last attribute in the collection.
            </summary>
            <param name="name">The name of the attribute to insert.</param>
            <param name="value">The value of the attribute to insert.</param>
            <returns>The appended attribute.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlAttributeCollection.Prepend(HtmlAgilityPack.HtmlAttribute)">
            <summary>
            Inserts the specified attribute as the first node in the collection.
            </summary>
            <param name="newAttribute">The attribute to insert. May not be null.</param>
            <returns>The prepended attribute.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlAttributeCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the attribute at the specified index.
            </summary>
            <param name="index">The index of the attribute to remove.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlAttributeCollection.Remove(HtmlAgilityPack.HtmlAttribute)">
            <summary>
            Removes a given attribute from the list.
            </summary>
            <param name="attribute">The attribute to remove. May not be null.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlAttributeCollection.Remove(System.String)">
            <summary>
            Removes an attribute from the list, using its name. If there are more than one attributes with this name, they will all be removed.
            </summary>
            <param name="name">The attribute's name. May not be null.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlAttributeCollection.RemoveAll">
            <summary>
            Remove all attributes in the list.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.HtmlAttributeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the list.
            </summary>
            <returns>An IEnumerator for the entire list.</returns>
        </member>
        <member name="P:HtmlAgilityPack.HtmlAttributeCollection.Count">
            <summary>
            Gets the number of elements actually contained in the list.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlAttributeCollection.Item(System.String)">
            <summary>
            Gets a given attribute from the list using its name.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlAttributeCollection.Item(System.Int32)">
            <summary>
            Gets the attribute at the specified index.
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlAttributeCollection.HtmlAttributeEnumerator">
            <summary>
            Represents an enumerator that can iterate through the list.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.HtmlAttributeCollection.HtmlAttributeEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.HtmlAttributeCollection.HtmlAttributeEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element, false if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="P:HtmlAgilityPack.HtmlAttributeCollection.HtmlAttributeEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlAttributeCollection.HtmlAttributeEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="P:ExtAspNet.ToolbarDesigner.CurrentControl">
            <summary>
            Current Control
            </summary>
        </member>
        <member name="T:ExtAspNet.TriggerIcon">
            <summary>
            系统图标
            </summary>
        </member>
        <member name="T:ExtAspNet.TriggerIconHelper">
            <summary>
            系统图标名称
            </summary>
        </member>
        <member name="T:ExtAspNet.ToolTipType">
            <summary>
            提示框的类型
            </summary>
        </member>
        <member name="T:ExtAspNet.ToolTipTypeName">
            <summary>
            提示框的类型名称
            </summary>
        </member>
        <member name="T:ExtAspNet.TextMode">
            <summary>
            文本框类型
            </summary>
        </member>
        <member name="T:ExtAspNet.TextModeHelper">
            <summary>
            文本框类型名称
            </summary>
        </member>
        <member name="T:ExtAspNet.HiddenField">
            <summary>
            隐藏表单控件
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlWebException">
            <summary>
            Represents an exception thrown by the HtmlWeb utility class.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.HtmlWebException.#ctor(System.String)">
            <summary>
            Creates an instance of the HtmlWebException.
            </summary>
            <param name="message">The exception's message.</param>
        </member>
        <member name="P:ExtAspNet.PageLoading.ImageUrl">
            <summary>
            自定义的加载图片
            </summary>
        </member>
        <member name="P:ExtAspNet.PageLoading.ShowOnPostBack">
            <summary>
            回发时是否显示
            </summary>
        </member>
        <member name="P:ExtAspNet.PageLoading.EnableFadeOut">
            <summary>
            是否启用淡出效果
            </summary>
        </member>
        <member name="T:ExtAspNet.Tree">
            <summary>
            树控件
            </summary>
        </member>
        <member name="M:ExtAspNet.Tree.DataBind">
            <summary>
            Bind to the current DataSource.
            </summary>
            <seealso cref="P:ExtAspNet.Tree.DataSource"/>
        </member>
        <member name="M:ExtAspNet.Tree.FixTreeNodes">
            <summary>
            如果一个节点不是叶子节点并且没有子节点，则应把它的Expanded设置为false，否则会引起页面死循环回发
            AutoLeafIdentification
            </summary>
        </member>
        <member name="P:ExtAspNet.Tree.Items">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Tree.EnableIFrame">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Tree.IFrameUrl">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Tree.IFrameName">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Tree.Layout">
            <summary>
            布局类型
            </summary>
        </member>
        <member name="P:ExtAspNet.Tree.EnableArrows">
            <summary>
            启用箭头
            </summary>
        </member>
        <member name="P:ExtAspNet.Tree.EnableAnimate">
            <summary>
            启用动画
            </summary>
        </member>
        <member name="P:ExtAspNet.Tree.EnableSingleExpand">
            <summary>
            每次只能展开一个
            </summary>
        </member>
        <member name="P:ExtAspNet.Tree.EnableLines">
            <summary>
            启用节点之间连线
            </summary>
        </member>
        <member name="P:ExtAspNet.Tree.AutoLeafIdentification">
            <summary>
            启用此项，则所有没有子节点的节点都将被自动标识为叶子节点
            </summary>
        </member>
        <member name="P:ExtAspNet.Tree.EnableMultiSelect">
            <summary>
            启用多行选择
            </summary>
        </member>
        <member name="P:ExtAspNet.Tree.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="P:ExtAspNet.Tree.SelectedNodeIDArray">
            <summary>
            选中行节点ID列表
            </summary>
        </member>
        <member name="T:ExtAspNet.LinkButton">
            <summary>
            链接按钮控件
            </summary>
        </member>
        <member name="P:ExtAspNet.LinkButton.TabIndex">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.LinkButton.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:ExtAspNet.LinkButton.OnClientClick">
            <summary>
            点击按钮时需要执行的客户端脚本
            </summary>
        </member>
        <member name="P:ExtAspNet.LinkButton.ValidateForms">
            <summary>
            提交之前需要验证的表单名称列表
            </summary>
        </member>
        <member name="P:ExtAspNet.LinkButton.ValidateTarget">
            <summary>
            验证失败时提示对话框弹出位置
            </summary>
        </member>
        <member name="P:ExtAspNet.LinkButton.EnablePostBack">
            <summary>
            是否可以回发
            </summary>
        </member>
        <member name="P:ExtAspNet.LinkButton.ConfirmTitle">
            <summary>
            确认对话框标题
            </summary>
        </member>
        <member name="P:ExtAspNet.LinkButton.ConfirmText">
            <summary>
            确认对话框内容
            </summary>
        </member>
        <member name="P:ExtAspNet.LinkButton.ConfirmIcon">
            <summary>
            确认对话框提示图标
            </summary>
        </member>
        <member name="P:ExtAspNet.LinkButton.ConfirmTarget">
            <summary>
            确认对话框弹出位置
            </summary>
        </member>
        <member name="E:ExtAspNet.LinkButton.Click">
            <summary>
            点击按钮事件
            </summary>
        </member>
        <member name="T:ExtAspNet.TwinTriggerBox">
            <summary>
            扩展文本框控件
            </summary>
        </member>
        <member name="P:ExtAspNet.TwinTriggerBox.EnableEdit">
            <summary>
            是否允许编辑
            </summary>
        </member>
        <member name="P:ExtAspNet.TwinTriggerBox.ShowTrigger">
            <summary>
            是否显示触发器
            </summary>
        </member>
        <member name="P:ExtAspNet.TwinTriggerBox.ShowTrigger1">
            <summary>
            是否显示第一个触发器
            </summary>
        </member>
        <member name="P:ExtAspNet.TwinTriggerBox.ShowTrigger2">
            <summary>
            是否显示第一个触发器
            </summary>
        </member>
        <member name="P:ExtAspNet.TwinTriggerBox.EnableTrigger1PostBack">
            <summary>
            是否可以回发第一个触发器
            </summary>
        </member>
        <member name="P:ExtAspNet.TwinTriggerBox.EnableTrigger2PostBack">
            <summary>
            是否可以回发第一个触发器
            </summary>
        </member>
        <member name="P:ExtAspNet.TwinTriggerBox.Trigger1IconUrl">
            <summary>
            第一个触发器图片
            </summary>
        </member>
        <member name="P:ExtAspNet.TwinTriggerBox.Trigger2IconUrl">
            <summary>
            第二个触发器图片
            </summary>
        </member>
        <member name="P:ExtAspNet.TwinTriggerBox.Trigger1Icon">
            <summary>
            第一个触发器图片
            </summary>
        </member>
        <member name="P:ExtAspNet.TwinTriggerBox.Trigger2Icon">
            <summary>
            第二个触发器图片
            </summary>
        </member>
        <member name="P:ExtAspNet.TwinTriggerBox.OnClientTrigger1Click">
            <summary>
            点击第一个触发器时需要执行的客户端脚本
            </summary>
        </member>
        <member name="P:ExtAspNet.TwinTriggerBox.OnClientTrigger2Click">
            <summary>
            点击第二个触发器时需要执行的客户端脚本
            </summary>
        </member>
        <member name="T:ExtAspNet.Image">
            <summary>
            图片控件
            </summary>
        </member>
        <member name="P:ExtAspNet.Image.Enabled">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Image.TabIndex">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Image.ToolTip">
            <summary>
            提示文本
            </summary>
        </member>
        <member name="P:ExtAspNet.Image.ToolTipTitle">
            <summary>
            提示文本的标题
            </summary>
        </member>
        <member name="P:ExtAspNet.Image.ToolTipAutoHide">
            <summary>
            提示文本是否自动隐藏
            </summary>
        </member>
        <member name="P:ExtAspNet.Image.ImageUrl">
            <summary>
            链接地址
            </summary>
        </member>
        <member name="P:ExtAspNet.Image.Icon">
            <summary>
            预定义图标
            </summary>
        </member>
        <member name="P:ExtAspNet.Image.ImageWidth">
            <summary>
            图片的宽度
            </summary>
        </member>
        <member name="P:ExtAspNet.Image.ImageHeight">
            <summary>
            图片的高度
            </summary>
        </member>
        <member name="P:ExtAspNet.Image.ImageCssClass">
            <summary>
            图片的样式类
            </summary>
        </member>
        <member name="P:ExtAspNet.Image.ImageCssStyle">
            <summary>
            图片的样式
            </summary>
        </member>
        <member name="P:ExtAspNet.Image.ImageAlt">
            <summary>
            图片的Alt
            </summary>
        </member>
        <member name="T:ExtAspNet.Menu">
            <summary>
            菜单控件
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.MixedCodeDocumentFragment">
            <summary>
            Represents a base class for fragments in a mixed code document.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.MixedCodeDocumentFragment.FragmentType">
            <summary>
            Gets the type of fragment.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.MixedCodeDocumentFragment.StreamPosition">
            <summary>
            Gets the fragment position in the document's stream.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.MixedCodeDocumentFragment.Line">
            <summary>
            Gets the line number of the fragment.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.MixedCodeDocumentFragment.LinePosition">
            <summary>
            Gets the line position (column) of the fragment.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.MixedCodeDocumentFragment.FragmentText">
            <summary>
            Gets the fragement text.
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlParseErrorCode">
            <summary>
            Represents the type of parsing error.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlParseErrorCode.TagNotClosed">
            <summary>
            A tag was not closed.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlParseErrorCode.TagNotOpened">
            <summary>
            A tag was not opened.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlParseErrorCode.CharsetMismatch">
            <summary>
            There is a charset mismatch between stream and declared (META) encoding.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlParseErrorCode.EndTagNotRequired">
            <summary>
            An end tag was not required.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlParseErrorCode.EndTagInvalidHere">
            <summary>
            An end tag is invalid at this position.
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlNode">
            <summary>
            Represents an HTML node.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlNode.HtmlNodeTypeNameComment">
            <summary>
            Gets the name of a comment node. It is actually defined as '#comment'.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlNode.HtmlNodeTypeNameDocument">
            <summary>
            Gets the name of the document node. It is actually defined as '#document'.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlNode.HtmlNodeTypeNameText">
            <summary>
            Gets the name of a text node. It is actually defined as '#text'.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlNode.ElementsFlags">
            <summary>
            Gets a collection of flags that define specific behaviors for specific element nodes.
            The table contains a DictionaryEntry list with the lowercase tag name as the Key, and a combination of HtmlElementFlags as the Value.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.IsClosedElement(System.String)">
            <summary>
            Determines if an element node is closed.
            </summary>
            <param name="name">The name of the element node to check. May not be null.</param>
            <returns>true if the name is the name of a closed element node, false otherwise.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.CanOverlapElement(System.String)">
            <summary>
            Determines if an element node can be kept overlapped.
            </summary>
            <param name="name">The name of the element node to check. May not be null.</param>
            <returns>true if the name is the name of an element node that can be kept overlapped, false otherwise.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.IsOverlappedClosingElement(System.String)">
            <summary>
            Determines if a text corresponds to the closing tag of an node that can be kept overlapped.
            </summary>
            <param name="text">The text to check. May not be null.</param>
            <returns>true or false.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.IsCDataElement(System.String)">
            <summary>
            Determines if an element node is a CDATA element node.
            </summary>
            <param name="name">The name of the element node to check. May not be null.</param>
            <returns>true if the name is the name of a CDATA element node, false otherwise.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.IsEmptyElement(System.String)">
            <summary>
            Determines if an element node is defined as empty.
            </summary>
            <param name="name">The name of the element node to check. May not be null.</param>
            <returns>true if the name is the name of an empty element node, false otherwise.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.CreateNode(System.String)">
            <summary>
            Creates an HTML node from a string representing literal HTML.
            </summary>
            <param name="html">The HTML text.</param>
            <returns>The newly created node instance.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.CopyFrom(HtmlAgilityPack.HtmlNode)">
            <summary>
            Creates a duplicate of the node and the subtree under it.
            </summary>
            <param name="node">The node to duplicate. May not be null.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.CopyFrom(HtmlAgilityPack.HtmlNode,System.Boolean)">
            <summary>
            Creates a duplicate of the node.
            </summary>
            <param name="node">The node to duplicate. May not be null.</param>
            <param name="deep">true to recursively clone the subtree under the specified node, false to clone only the node itself.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.CreateNavigator">
            <summary>
            Creates a new XPathNavigator object for navigating this HTML node.
            </summary>
            <returns>An XPathNavigator object. The XPathNavigator is positioned on the node from which the method was called. It is not positioned on the root of the document.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.SelectSingleNode(System.String)">
            <summary>
            Selects the first XmlNode that matches the XPath expression.
            </summary>
            <param name="xpath">The XPath expression. May not be null.</param>
            <returns>The first HtmlNode that matches the XPath query or a null reference if no matching node was found.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.SelectNodes(System.String)">
            <summary>
            Selects a list of nodes matching the XPath expression.
            </summary>
            <param name="xpath">The XPath expression.</param>
            <returns>An HtmlNodeCollection containing a collection of nodes matching the XPath query, or null if no node matched the XPath expression.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.Clone">
            <summary>
            Creates a duplicate of the node
            </summary>
            <returns></returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.CloneNode(System.String)">
            <summary>
            Creates a duplicate of the node and changes its name at the same time.
            </summary>
            <param name="newName">The new name of the cloned node. May not be null.</param>
            <returns>The cloned node.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.CloneNode(System.String,System.Boolean)">
            <summary>
            Creates a duplicate of the node and changes its name at the same time.
            </summary>
            <param name="newName">The new name of the cloned node. May not be null.</param>
            <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
            <returns>The cloned node.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.CloneNode(System.Boolean)">
            <summary>
            Creates a duplicate of the node.
            </summary>
            <param name="deep">true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
            <returns>The cloned node.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.RemoveAll">
            <summary>
            Removes all the children and/or attributes of the current node.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.RemoveAllChildren">
            <summary>
            Removes all the children of the current node.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.RemoveChild(HtmlAgilityPack.HtmlNode)">
            <summary>
            Removes the specified child node.
            </summary>
            <param name="oldChild">The node being removed. May not be null.</param>
            <returns>The node removed.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.RemoveChild(HtmlAgilityPack.HtmlNode,System.Boolean)">
            <summary>
            Removes the specified child node.
            </summary>
            <param name="oldChild">The node being removed. May not be null.</param>
            <param name="keepGrandChildren">true to keep grand children of the node, false otherwise.</param>
            <returns>The node removed.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.ReplaceChild(HtmlAgilityPack.HtmlNode,HtmlAgilityPack.HtmlNode)">
            <summary>
            Replaces the child node oldChild with newChild node.
            </summary>
            <param name="newChild">The new node to put in the child list.</param>
            <param name="oldChild">The node being replaced in the list.</param>
            <returns>The node replaced.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.InsertBefore(HtmlAgilityPack.HtmlNode,HtmlAgilityPack.HtmlNode)">
            <summary>
            Inserts the specified node immediately before the specified reference node.
            </summary>
            <param name="newChild">The node to insert. May not be null.</param>
            <param name="refChild">The node that is the reference node. The newChild is placed before this node.</param>
            <returns>The node being inserted.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.InsertAfter(HtmlAgilityPack.HtmlNode,HtmlAgilityPack.HtmlNode)">
            <summary>
            Inserts the specified node immediately after the specified reference node.
            </summary>
            <param name="newChild">The node to insert. May not be null.</param>
            <param name="refChild">The node that is the reference node. The newNode is placed after the refNode.</param>
            <returns>The node being inserted.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.PrependChild(HtmlAgilityPack.HtmlNode)">
            <summary>
            Adds the specified node to the beginning of the list of children of this node.
            </summary>
            <param name="newChild">The node to add. May not be null.</param>
            <returns>The node added.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.PrependChildren(HtmlAgilityPack.HtmlNodeCollection)">
            <summary>
            Adds the specified node list to the beginning of the list of children of this node.
            </summary>
            <param name="newChildren">The node list to add. May not be null.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.AppendChild(HtmlAgilityPack.HtmlNode)">
            <summary>
            Adds the specified node to the end of the list of children of this node.
            </summary>
            <param name="newChild">The node to add. May not be null.</param>
            <returns>The node added.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.AppendChildren(HtmlAgilityPack.HtmlNodeCollection)">
            <summary>
            Adds the specified node to the end of the list of children of this node.
            </summary>
            <param name="newChildren">The node list to add. May not be null.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.GetAttributeValue(System.String,System.String)">
            <summary>
            Helper method to get the value of an attribute of this node. If the attribute is not found, the default value will be returned.
            </summary>
            <param name="name">The name of the attribute to get. May not be null.</param>
            <param name="def">The default value to return if not found.</param>
            <returns>The value of the attribute if found, the default value if not found.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.GetAttributeValue(System.String,System.Int32)">
            <summary>
            Helper method to get the value of an attribute of this node. If the attribute is not found, the default value will be returned.
            </summary>
            <param name="name">The name of the attribute to get. May not be null.</param>
            <param name="def">The default value to return if not found.</param>
            <returns>The value of the attribute if found, the default value if not found.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.GetAttributeValue(System.String,System.Boolean)">
            <summary>
            Helper method to get the value of an attribute of this node. If the attribute is not found, the default value will be returned.
            </summary>
            <param name="name">The name of the attribute to get. May not be null.</param>
            <param name="def">The default value to return if not found.</param>
            <returns>The value of the attribute if found, the default value if not found.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.SetAttributeValue(System.String,System.String)">
            <summary>
            Helper method to set the value of an attribute of this node. If the attribute is not found, it will be created automatically.
            </summary>
            <param name="name">The name of the attribute to set. May not be null.</param>
            <param name="value">The value for the attribute.</param>
            <returns>The corresponding attribute instance.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.WriteTo(System.IO.TextWriter)">
            <summary>
            Saves the current node to the specified TextWriter.
            </summary>
            <param name="outText">The TextWriter to which you want to save.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.WriteTo(System.Xml.XmlWriter)">
            <summary>
            Saves the current node to the specified XmlWriter.
            </summary>
            <param name="writer">The XmlWriter to which you want to save.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.WriteContentTo(System.IO.TextWriter)">
            <summary>
            Saves all the children of the node to the specified TextWriter.
            </summary>
            <param name="outText">The TextWriter to which you want to save.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.WriteTo">
            <summary>
            Saves the current node to a string.
            </summary>
            <returns>The saved string.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNode.WriteContentTo">
            <summary>
            Saves all the children of the node to a string.
            </summary>
            <returns>The saved string.</returns>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.Id">
            <summary>
            Gets or sets the value of the 'id' HTML attribute. The document must have been parsed using the OptionUseIdAttribute set to true.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.Line">
            <summary>
            Gets the line number of this node in the document.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.LinePosition">
            <summary>
            Gets the column number of this node in the document.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.StreamPosition">
            <summary>
            Gets the stream position of this node in the document, relative to the start of the document.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.Closed">
            <summary>
            Gets a value indicating if this node has been closed or not.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.Name">
            <summary>
            Gets or sets this node's name.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.InnerText">
            <summary>
            Gets or Sets the text between the start and end tags of the object.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.InnerHtml">
            <summary>
            Gets or Sets the HTML between the start and end tags of the object.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.OuterHtml">
            <summary>
            Gets or Sets the object and its content in HTML.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.NextSibling">
            <summary>
            Gets the HTML node immediately following this element.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.PreviousSibling">
            <summary>
            Gets the node immediately preceding this node.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.FirstChild">
            <summary>
            Gets the first child of the node.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.LastChild">
            <summary>
            Gets the last child of the node.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.NodeType">
            <summary>
            Gets the type of this node.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.ParentNode">
            <summary>
            Gets the parent of this node (for nodes that can have parents).
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.OwnerDocument">
            <summary>
            Gets the HtmlDocument to which this node belongs.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.ChildNodes">
            <summary>
            Gets all the children of the node.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.HasAttributes">
            <summary>
            Gets a value indicating whether the current node has any attributes.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.HasClosingAttributes">
            <summary>
            Gets a value indicating whether the current node has any attributes on the closing tag.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.HasChildNodes">
            <summary>
            Gets a value indicating whether this node has any child nodes.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.Attributes">
            <summary>
            Gets the collection of HTML attributes for this node. May not be null.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNode.ClosingAttributes">
            <summary>
            Gets the collection of HTML attributes for the closing tag. May not be null.
            </summary>
        </member>
        <member name="T:ExtAspNet.Position">
            <summary>
            布局区域
            </summary>
        </member>
        <member name="T:ExtAspNet.PositionHelper">
            <summary>
            布局类型名称
            </summary>
        </member>
        <member name="T:ExtAspNet.ButtonType">
            <summary>
            按钮类型
            </summary>
        </member>
        <member name="T:ExtAspNet.ButtonTypeName">
            <summary>
            按钮类型名称
            </summary>
        </member>
        <member name="T:ExtAspNet.Operator">
            <summary>
            操作符
            </summary>
        </member>
        <member name="T:ExtAspNet.OperatorHelper">
            <summary>
            操作符名称
            </summary>
        </member>
        <member name="T:ExtAspNet.CompareType">
            <summary>
            比较的类型
            </summary>
        </member>
        <member name="F:ExtAspNet.GlobalConfig.section">
            <summary>
            Runtime Section
            </summary>
        </member>
        <member name="M:ExtAspNet.GlobalConfig.GetDesignTimeSection(System.ComponentModel.ISite)">
            <summary>
            Refer:http://flimflan.com/blog/AccessingWebconfigAtDesignTimeInNET20.aspx
            </summary>
            <param name="site"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.GlobalConfig.GetTheme">
            <summary>
            主题
            </summary>
        </member>
        <member name="M:ExtAspNet.GlobalConfig.GetLanguage">
            <summary>
            语言
            </summary>
        </member>
        <member name="M:ExtAspNet.GlobalConfig.GetFormMessageTarget">
            <summary>
            表单中消息的位置
            </summary>
        </member>
        <member name="M:ExtAspNet.GlobalConfig.GetFormOffsetRight">
            <summary>
            表单中字段距离右侧的宽度
            </summary>
        </member>
        <member name="M:ExtAspNet.GlobalConfig.GetFormLabelWidth">
            <summary>
            表单中字段标题的宽度
            </summary>
        </member>
        <member name="M:ExtAspNet.GlobalConfig.GetAjaxTimeout">
            <summary>
            Ajax超时时间（单位：秒，默认：60s）
            </summary>
        </member>
        <member name="M:ExtAspNet.GlobalConfig.GetEnableAjax">
            <summary>
            是否启用Ajax
            </summary>
        </member>
        <member name="P:ExtAspNet.GlobalConfig.ProductName">
            <summary>
            产品名称
            </summary>
        </member>
        <member name="P:ExtAspNet.GlobalConfig.ProductVersion">
            <summary>
            当前版本
            </summary>
        </member>
        <member name="T:ExtAspNet.Form">
            <summary>
            表单面板控件
            </summary>
        </member>
        <member name="M:ExtAspNet.Form.ResolveRows(System.String@,System.String@)">
            <summary>
            处理列
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Form.AddColumnScript(ExtAspNet.JsArrayBuilder,System.Int32,System.Int32,System.Int32)">
            <summary>
            添加Column
            </summary>
            <param name="ab"></param>
            <param name="startLineIndex">开始行序号（包含）</param>
            <param name="endLineIndex">结束行序号（包含）</param>
            <param name="columnCount">行的列数</param>
        </member>
        <member name="M:ExtAspNet.Form.AddItemScript(ExtAspNet.JsArrayBuilder,System.String)">
            <summary>
            添加Items变量
            </summary>
            <param name="ab"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Form.GetRowColumnCount(ExtAspNet.FormRow)">
            <summary>
            取得当前行的列数
            </summary>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Form.GetRowColumnControl(ExtAspNet.FormRow,System.Int32)">
            <summary>
            取得当前行 columnIndex 列的控件
            </summary>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="P:ExtAspNet.Form.Items">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Form.EnableIFrame">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Form.IFrameUrl">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Form.IFrameName">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Form.Layout">
            <summary>
            布局类型
            </summary>
        </member>
        <member name="P:ExtAspNet.Form.LabelWidth">
            <summary>
            标签的宽度
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlElementFlag">
            <summary>
            Flags that describe the behavior of an Element node.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlElementFlag.CData">
            <summary>
            The node is a CDATA node.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlElementFlag.Empty">
            <summary>
            The node is empty. META or IMG are example of such nodes.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlElementFlag.Closed">
            <summary>
            The node will automatically be closed during parsing.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlElementFlag.CanOverlap">
            <summary>
            The node can overlap.
            </summary>
        </member>
        <member name="T:ExtAspNet.CalendarDesigner">
            <summary>
            按钮设计时
            </summary>
        </member>
        <member name="T:ExtAspNet.Language">
            <summary>
            语言
            </summary>
        </member>
        <member name="T:ExtAspNet.LanguageHelper">
            <summary>
            语言的类型名称
            </summary>
        </member>
        <member name="T:ExtAspNet.JsObjectBuilder">
            <summary>
            创建Javascript对象参数
            </summary>
        </member>
        <member name="M:ExtAspNet.JsObjectBuilder.RemoveProperty(System.String)">
            <summary>
            删除属性
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:ExtAspNet.JsObjectBuilder.ContainsProperty(System.String)">
            <summary>
            是否包含属性
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.JsObjectBuilder.AddProperty(System.String,System.Object)">
            <summary>
            添加属性
            </summary>
            <param name="propertyName"></param>
            <param name="propertyValue"></param>
        </member>
        <member name="M:ExtAspNet.JsObjectBuilder.AddProperty(System.String,System.Object,System.Boolean)">
            <summary>
            添加属性
            </summary>
            <param name="propertyName"></param>
            <param name="propertyValue"></param>
            <param name="persistOriginal">是否保持原样</param>
        </member>
        <member name="M:ExtAspNet.JsObjectBuilder.ToString">
            <summary>
            返回对象的Json字符串表示
            </summary>
            <returns></returns>
        </member>
        <member name="T:ExtAspNet.MsgTarget">
            <summary>
            提示消息的类型
            </summary>
        </member>
        <member name="T:ExtAspNet.MsgTargetHelper">
            <summary>
            提示消息的类型名称
            </summary>
        </member>
        <member name="T:ExtAspNet.Panel">
            <summary>
            面板控件
            </summary>
        </member>
        <member name="T:ExtAspNet.ContentPanel">
            <summary>
            容器面板控件
            </summary>
        </member>
        <member name="P:ExtAspNet.ContentPanel.EnableIFrame">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.ContentPanel.IFrameUrl">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.ContentPanel.IFrameName">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.ContentPanel.Layout">
            <summary>
            布局类型
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.MixedCodeDocument">
            <summary>
            Represents a document with mixed code and text. ASP, ASPX, JSP, are good example of such documents.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.MixedCodeDocument.TokenCodeStart">
            <summary>
            Gets or sets the token representing code start.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.MixedCodeDocument.TokenCodeEnd">
            <summary>
            Gets or sets the token representing code end.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.MixedCodeDocument.TokenDirective">
            <summary>
            Gets or sets the token representing code directive.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.MixedCodeDocument.TokenResponseWrite">
            <summary>
            Gets or sets the token representing response write directive.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.#ctor">
            <summary>
            Creates a mixed code document instance.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.Load(System.IO.Stream)">
            <summary>
            Loads a mixed code document from a stream.
            </summary>
            <param name="stream">The input stream.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.Load(System.IO.Stream,System.Boolean)">
            <summary>
            Loads a mixed code document from a stream.
            </summary>
            <param name="stream">The input stream.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the file.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.Load(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Loads a mixed code document from a stream.
            </summary>
            <param name="stream">The input stream.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.Load(System.IO.Stream,System.Text.Encoding,System.Boolean)">
            <summary>
            Loads a mixed code document from a stream.
            </summary>
            <param name="stream">The input stream.</param>
            <param name="encoding">The character encoding to use.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the file.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.Load(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>
            Loads a mixed code document from a stream.
            </summary>
            <param name="stream">The input stream.</param>
            <param name="encoding">The character encoding to use.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the file.</param>
            <param name="buffersize">The minimum buffer size.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.Load(System.String)">
            <summary>
            Loads a mixed code document from a file.
            </summary>
            <param name="path">The complete file path to be read.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.Load(System.String,System.Boolean)">
            <summary>
            Loads a mixed code document from a file.
            </summary>
            <param name="path">The complete file path to be read.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the file.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.Load(System.String,System.Text.Encoding)">
            <summary>
            Loads a mixed code document from a file.
            </summary>
            <param name="path">The complete file path to be read.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.Load(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Loads a mixed code document from a file.
            </summary>
            <param name="path">The complete file path to be read.</param>
            <param name="encoding">The character encoding to use.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the file.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.Load(System.String,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>
            Loads a mixed code document from a file.
            </summary>
            <param name="path">The complete file path to be read.</param>
            <param name="encoding">The character encoding to use.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the file.</param>
            <param name="buffersize">The minimum buffer size.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.LoadHtml(System.String)">
            <summary>
            Loads a mixed document from a text
            </summary>
            <param name="html">The text to load.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.Load(System.IO.TextReader)">
            <summary>
            Loads the mixed code document from the specified TextReader.
            </summary>
            <param name="reader">The TextReader used to feed the HTML data into the document.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.Save(System.IO.Stream)">
            <summary>
            Saves the mixed document to the specified stream.
            </summary>
            <param name="outStream">The stream to which you want to save.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.Save(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Saves the mixed document to the specified stream.
            </summary>
            <param name="outStream">The stream to which you want to save.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.Save(System.String)">
            <summary>
            Saves the mixed document to the specified file.
            </summary>
            <param name="filename">The location of the file where you want to save the document.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.Save(System.String,System.Text.Encoding)">
            <summary>
            Saves the mixed document to the specified file.
            </summary>
            <param name="filename">The location of the file where you want to save the document.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.Save(System.IO.StreamWriter)">
            <summary>
            Saves the mixed document to the specified StreamWriter.
            </summary>
            <param name="writer">The StreamWriter to which you want to save.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.Save(System.IO.TextWriter)">
            <summary>
            Saves the mixed document to the specified TextWriter.
            </summary>
            <param name="writer">The TextWriter to which you want to save.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.CreateTextFragment">
            <summary>
            Create a text fragment instances.
            </summary>
            <returns>The newly created text fragment instance.</returns>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocument.CreateCodeFragment">
            <summary>
            Create a code fragment instances.
            </summary>
            <returns>The newly created code fragment instance.</returns>
        </member>
        <member name="P:HtmlAgilityPack.MixedCodeDocument.StreamEncoding">
            <summary>
            Gets the encoding of the stream used to read the document.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.MixedCodeDocument.CodeFragments">
            <summary>
            Gets the list of code fragments in the document.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.MixedCodeDocument.TextFragments">
            <summary>
            Gets the list of text fragments in the document.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.MixedCodeDocument.Fragments">
            <summary>
            Gets the list of all fragments in the document.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.MixedCodeDocument.Code">
            <summary>
            Gets the code represented by the mixed code document seen as a template.
            </summary>
        </member>
        <member name="T:ExtAspNet.LabelDesigner">
            <summary>
            按钮设计时
            </summary>
        </member>
        <member name="P:ExtAspNet.CollapsablePanelDesigner.CurrentControl">
            <summary>
            Current Control
            </summary>
        </member>
        <member name="T:ExtAspNet.ScriptModule">
            <summary>
            参考Asp.Net Ajax中的System.Web.Handlers.ScriptModule实现
            </summary>
        </member>
        <member name="T:ExtAspNet.NumberBox">
            <summary>
            数字输入框控件
            </summary>
        </member>
        <member name="P:ExtAspNet.NumberBox.NoDecimal">
            <summary>
            不允许小数
            </summary>
        </member>
        <member name="P:ExtAspNet.NumberBox.NoNegative">
            <summary>
            不允许负数
            </summary>
        </member>
        <member name="P:ExtAspNet.NumberBox.MaxValue">
            <summary>
            最大值
            </summary>
        </member>
        <member name="P:ExtAspNet.NumberBox.MinValue">
            <summary>
            最小值
            </summary>
        </member>
        <member name="P:ExtAspNet.NumberBox.DecimalPrecision">
            <summary>
            小数点后的位数（默认为2）
            </summary>
        </member>
        <member name="T:ExtAspNet.TextArea">
            <summary>
            多行文本框控件
            </summary>
        </member>
        <member name="P:ExtAspNet.TextArea.AutoGrowHeight">
            <summary>
            是否自动增长高度
            </summary>
        </member>
        <member name="P:ExtAspNet.TextArea.AutoGrowHeightMax">
            <summary>
            自动增长的最大高度
            </summary>
        </member>
        <member name="T:ExtAspNet.Window">
            <summary>
            Window Control
            </summary>
        </member>
        <member name="M:ExtAspNet.Window.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            不向页面输出任何HTML代码，通过Javascript代码添加DIV标签
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:ExtAspNet.Window.RenderEndTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            不向页面输出任何HTML代码，通过Javascript代码添加DIV标签
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:ExtAspNet.Window.GetHiddenPropertyChangedScript">
            <summary>
            Override the same method exist in ControlBase, because we have separate logic to hide this control.
            </summary>
        </member>
        <member name="M:ExtAspNet.Window.GetSaveStateReference(System.String[])">
            <summary>
            保存服务器控件的ClientID
            可以调用ActiveWindow.GetWriteBackValueReference在子页面向这些服务器控件写入值
            </summary>
        </member>
        <member name="M:ExtAspNet.Window.GetShowReference">
            <summary>
            显示窗体的JavaScript代码
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Window.GetHideReference">
            <summary>
            取得关闭当前激活Window的JS脚本
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Window.GetHideRefreshReference">
            <summary>
            取得关闭当前激活Window的JS脚本
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Window.GetHidePostBackReference">
            <summary>
            取得关闭当前激活Window的JS脚本
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Window.GetHidePostBackReference(System.String)">
            <summary>
            取得关闭当前激活Window的JS脚本
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Window.GetConfirmHideReference">
            <summary>
            获取先确认IFrame的页面中表单改变，然后关闭弹出窗口的客户端脚本
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Window.GetConfirmHideRefreshReference">
            <summary>
            获取先确认IFrame的页面中表单改变，然后关闭弹出窗口，然后刷新父页面的客户端脚本
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Window.GetConfirmHidePostBackReference">
            <summary>
            获取先确认IFrame的页面中表单改变，然后关闭弹出窗口，然后回发父页面的客户端脚本
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Window.GetConfirmHidePostBackReference(System.String)">
            <summary>
            获取先确认IFrame的页面中表单改变，然后关闭弹出窗口，然后回发父页面的客户端脚本
            </summary>
            <returns></returns>
        </member>
        <member name="P:ExtAspNet.Window.ShowHeader">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Window.ShowBorder">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Window.GUID">
            <summary>
            为了放置不同页面的Window的ClientID发生冲突，加上GUID
            </summary>
        </member>
        <member name="P:ExtAspNet.Window.IFrameName">
            <summary>
            [只读]Window的IFrameName必须是唯一的，在所有页面中是唯一的
            所以不要手工定义Window的IFrameName
            </summary>
        </member>
        <member name="P:ExtAspNet.Window.WindowPosition">
            <summary>
            窗口的位置
            </summary>
        </member>
        <member name="P:ExtAspNet.Window.Popup">
            <summary>
            是否弹出窗体
            </summary>
        </member>
        <member name="P:ExtAspNet.Window.Top">
            <summary>
            左上角位置
            </summary>
        </member>
        <member name="P:ExtAspNet.Window.Left">
            <summary>
            左上角位置
            </summary>
        </member>
        <member name="P:ExtAspNet.Window.EnableClose">
            <summary>
            是否可以关闭
            </summary>
        </member>
        <member name="P:ExtAspNet.Window.EnableDrag">
            <summary>
            是否可以移动
            </summary>
        </member>
        <member name="P:ExtAspNet.Window.EnableMaximize">
            <summary>
            是否可以最大化
            </summary>
        </member>
        <member name="P:ExtAspNet.Window.EnableMinimize">
            <summary>
            是否可以最小化
            </summary>
        </member>
        <member name="P:ExtAspNet.Window.MinHeight">
            <summary>
            最小高度
            </summary>
        </member>
        <member name="P:ExtAspNet.Window.MinWidth">
            <summary>
            最小宽度
            </summary>
        </member>
        <member name="P:ExtAspNet.Window.IsModal">
            <summary>
            是否模式窗口
            </summary>
        </member>
        <member name="P:ExtAspNet.Window.EnableResize">
            <summary>
            是否可以改变窗口大小
            </summary>
        </member>
        <member name="P:ExtAspNet.Window.OnClientCloseButtonClick">
            <summary>
            点击关闭按钮时需要执行的客户端脚本
            </summary>
        </member>
        <member name="P:ExtAspNet.Window.EnableConfirmOnClose">
            <summary>
            关闭Window之前弹出确认当前表单改变的对话框
            </summary>
        </member>
        <member name="P:ExtAspNet.Window.CloseAction">
            <summary>
            关闭窗体的动作
            </summary>
        </member>
        <member name="P:ExtAspNet.Window.Target">
            <summary>
            弹出窗口的目标位置
            </summary>
        </member>
        <member name="M:ExtAspNet.PageContext.Redirect(System.String)">
            <summary>
            跳转到指定的Url
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:ExtAspNet.PageContext.Redirect(System.String,System.String)">
            <summary>
            跳转到指定的Url，Target指定在哪个窗口中跳转（_self,_parent,_top）
            </summary>
            <param name="url"></param>
            <param name="target">_self,_parent,_top</param>
        </member>
        <member name="M:ExtAspNet.PageContext.RegisterStartupScript(System.String)">
            <summary>
            注册页面加载后的JS脚本
            </summary>
            <param name="page"></param>
            <param name="scriptContent"></param>
        </member>
        <member name="P:ExtAspNet.XmlAttributeMapping.From">
            <summary>
            映射源
            </summary>
        </member>
        <member name="P:ExtAspNet.XmlAttributeMapping.To">
            <summary>
            映射目标
            </summary>
        </member>
        <member name="T:ExtAspNet.RadioButton">
            <summary>
            单选框控件
            </summary>
        </member>
        <member name="M:ExtAspNet.RadioButton.ProcessOthersInGroup">
            <summary>
            设置本组内其他RadioButton的Checked属性为false
            简单处理，只查找和此RadioButton在同一个层级的RadioButton
            </summary>
        </member>
        <member name="P:ExtAspNet.RadioButton.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:ExtAspNet.RadioButton.Checked">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="P:ExtAspNet.RadioButton.GroupName">
            <summary>
            分组的名称
            </summary>
        </member>
        <member name="T:ExtAspNet.FormDesigner">
            <summary>
            Deign support for From control.
            </summary>
        </member>
        <member name="P:ExtAspNet.FormDesigner.CurrentControl">
            <summary>
            Current Control
            </summary>
        </member>
        <member name="T:ExtAspNet.HtmlNodeBuilder">
            <summary>
            创建HTML节点
            </summary>
        </member>
        <member name="M:ExtAspNet.HtmlNodeBuilder.SetProperty(System.String,System.String)">
            <summary>
            设置属性
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:ExtAspNet.HtmlNodeBuilder.GetProperty(System.String)">
            <summary>
            取得属性的值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.OptionBuilder.RemoveProperty(System.String)">
            <summary>
            删除属性
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:ExtAspNet.OptionBuilder.AddProperty(System.String,System.Object)">
            <summary>
            添加属性
            </summary>
            <param name="propertyName"></param>
            <param name="propertyValue"></param>
        </member>
        <member name="M:ExtAspNet.OptionBuilder.AddProperty(System.String,System.Object,System.Boolean)">
            <summary>
            添加属性
            </summary>
            <param name="propertyName"></param>
            <param name="propertyValue"></param>
            <param name="persistOriginal">是否保持原样</param>
        </member>
        <member name="M:ExtAspNet.OptionBuilder.GetProperty(System.String)">
            <summary>
            使用这个方法需要特别注意，因为这里返回的不是设置的属性了
            比如："margin-right:5px;"被添加到OB中就变成："\"margin-right:5px;\""
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.OptionBuilder.ToString">
            <summary>
            返回对象的Json字符串表示
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nii.JSON.JSONObject">
             <summary>
             <para>
             A JSONArray is an ordered sequence of values. Its external form is a string
             wrapped in square brackets with commas between the values. The internal form
             is an object having get() and opt() methods for accessing the values by
             index, and put() methods for adding or replacing values. The values can be
             any of these types: Boolean, JSONArray, JSONObject, Number, String, or the
             JSONObject.NULL object.
             </para>
             <para>
             The constructor can convert a JSON external form string into an
             internal form Java object. The toString() method creates an external
             form string.
             </para>
             <para>
             A get() method returns a value if one can be found, and throws an exception
             if one cannot be found. An opt() method returns a default value instead of
             throwing an exception, and so is useful for obtaining optional values.
             </para>
             <para>
             The generic get() and opt() methods return an object which you can cast or
             query for type. There are also typed get() and opt() methods that do typing
             checking and type coersion for you.
            </para>
             <para>
             The texts produced by the toString() methods are very strict.
             The constructors are more forgiving in the texts they will accept.
             </para>
             <para>
             <list type="bullet">
             <item><description>An extra comma may appear just before the closing bracket.</description></item>
             <item><description>Strings may be quoted with single quotes.</description></item>
             <item><description>Strings do not need to be quoted at all if they do not contain leading
                 or trailing spaces, and if they do not contain any of these characters:
                 { } [ ] / \ : , </description></item>
             <item><description>Numbers may have the 0- (octal) or 0x- (hex) prefix.</description></item>
             </list>
             </para>
             <para>
             Public Domain 2002 JSON.org
             @author JSON.org
             @version 0.1
            </para>
             Ported to C# by Are Bjolseth, teleplan.no
             TODO:
             1. Implement Custom exceptions
             2. Add indexer JSONObject[i] = object,     and object = JSONObject[i];
             3. Add indexer JSONObject["key"] = object, and object = JSONObject["key"]
             4. Add unit testing
             5. Add log4net
             6. Make get/put methods private, to force use of indexer instead?
             </summary>
        </member>
        <member name="F:Nii.JSON.JSONObject.myHashMap">
            <summary>The hash map where the JSONObject's properties are kept.</summary>
        </member>
        <member name="F:Nii.JSON.JSONObject.myKeyIndexList">
            <summary>A shadow list of keys to enable access by sequence of insertion</summary>
        </member>
        <member name="F:Nii.JSON.JSONObject.NULL">
            <summary>
            It is sometimes more convenient and less ambiguous to have a NULL
            object than to use C#'s null value.
            JSONObject.NULL.toString() returns "null".
            </summary>
        </member>
        <member name="M:Nii.JSON.JSONObject.#ctor">
            <summary>
             Construct an empty JSONObject.
            </summary>
        </member>
        <member name="M:Nii.JSON.JSONObject.#ctor(Nii.JSON.JSONTokener)">
            <summary>
            Construct a JSONObject from a JSONTokener.
            </summary>
            <param name="x">A JSONTokener object containing the source string.</param>
        </member>
        <member name="M:Nii.JSON.JSONObject.#ctor(System.String)">
            <summary>
            Construct a JSONObject from a string.
            </summary>
            <param name="sJSON">A string beginning with '{' and ending with '}'.</param>
        </member>
        <member name="M:Nii.JSON.JSONObject.#ctor(System.Collections.IDictionary)">
            <summary>
            Construct a JSONObject from a IDictionary
            </summary>
            <param name="map"></param>
        </member>
        <member name="M:Nii.JSON.JSONObject.accumulate(System.String,System.Object)">
            <summary>
            Accumulate values under a key. It is similar to the put method except
            that if there is already an object stored under the key then a
            JSONArray is stored under the key to hold all of the accumulated values.
            If there is already a JSONArray, then the new value is appended to it.
            In contrast, the put method replaces the previous value.
            </summary>
            <param name="key">A key string.</param>
            <param name="val">An object to be accumulated under the key.</param>
            <returns>this</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.getDictionary">
            <summary>
            C# convenience method
            </summary>
            <returns>The Hashtable</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.getValue(System.String)">
            <summary>
            Alias to Java get method
            Get the value object associated with a key.
            </summary>
            <param name="key">A key string.</param>
            <returns>The object associated with the key.</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.getBool(System.String)">
            <summary>
            Get the boolean value associated with a key.
            </summary>
            <param name="key">A key string.</param>
            <returns>The truth.</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.getDouble(System.String)">
            <summary>
            Get the double value associated with a key.
            </summary>
            <param name="key">A key string.</param>
            <returns>The double value</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.getInt(System.String)">
            <summary>
            Get the int value associated with a key.
            </summary>
            <param name="key">A key string</param>
            <returns> The integer value.</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.getJSONArray(System.String)">
            <summary>
            Get the JSONArray value associated with a key.
            </summary>
            <param name="key">A key string</param>
            <returns>A JSONArray which is the value</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.getJSONObject(System.String)">
            <summary>
            Get the JSONObject value associated with a key.
            </summary>
            <param name="key">A key string.</param>
            <returns>A JSONObject which is the value.</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.getString(System.String)">
            <summary>
            Get the string associated with a key.
            </summary>
            <param name="key">A key string.</param>
            <returns>A string which is the value.</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.has(System.String)">
            <summary>
            Determine if the JSONObject contains a specific key.
            </summary>
            <param name="key">A key string.</param>
            <returns>true if the key exists in the JSONObject.</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.keys">
            <summary>
            Get an enumeration of the keys of the JSONObject.
            Added to be true to orginal Java implementation
            Indexers are easier to use
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.isNull(System.String)">
            <summary>
            Determine if the value associated with the key is null or if there is no value.
            </summary>
            <param name="key">A key string</param>
            <returns>true if there is no value associated with the key or if the valus is the JSONObject.NULL object</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.Length">
            <summary>
            Get the number of keys stored in the JSONObject.
            </summary>
            <returns>The number of keys in the JSONObject.</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.names">
            <summary>
            Produce a JSONArray containing the names of the elements of this JSONObject
            </summary>
            <returns>A JSONArray containing the key strings, or null if the JSONObject</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.numberToString(System.Object)">
            <summary>
            Produce a string from a number.
            </summary>
            <param name="number">Number value type object</param>
            <returns>String representation of the number</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.opt(System.String)">
            <summary>
            Get an optional value associated with a key.
            </summary>
            <param name="key">A key string</param>
            <returns>An object which is the value, or null if there is no value.</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.optBoolean(System.String)">
            <summary>
            Get an optional value associated with a key.
            It returns false if there is no such key, or if the value is not
            Boolean.TRUE or the String "true".
            </summary>
            <param name="key">A key string.</param>
            <returns>bool value object</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.optBoolean(System.String,System.Boolean)">
            <summary>
            Get an optional value associated with a key.
            It returns false if there is no such key, or if the value is not
            Boolean.TRUE or the String "true".
            </summary>
            <param name="key">A key string.</param>
            <param name="defaultValue">The preferred return value if conversion fails</param>
            <returns>bool value object</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.optDouble(System.String)">
            <summary>
            Get an optional double associated with a key,
            or NaN if there is no such key or if its value is not a number.
            If the value is a string, an attempt will be made to evaluate it as
            a number.
            </summary>
            <param name="key">A string which is the key.</param>
            <returns>A double value object</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.optDouble(System.String,System.Double)">
            <summary>
            Get an optional double associated with a key,
            or NaN if there is no such key or if its value is not a number.
            If the value is a string, an attempt will be made to evaluate it as
            a number.
            </summary>
            <param name="key">A string which is the key.</param>
            <param name="defaultValue">The default</param>
            <returns>A double value object</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.optInt(System.String)">
            <summary>
             Get an optional double associated with a key, or the
             defaultValue if there is no such key or if its value is not a number.
             If the value is a string, an attempt will be made to evaluate it as
             number.
            </summary>
            <param name="key">A key string.</param>
            <returns>An int object value</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.optInt(System.String,System.Int32)">
            <summary>
             Get an optional double associated with a key, or the
             defaultValue if there is no such key or if its value is not a number.
             If the value is a string, an attempt will be made to evaluate it as
             number.
            </summary>
            <param name="key">A key string.</param>
            <param name="defaultValue">The default value</param>
            <returns>An int object value</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.optJSONArray(System.String)">
            <summary>
            Get an optional JSONArray associated with a key.
            It returns null if there is no such key, or if its value is not a JSONArray
            </summary>
            <param name="key">A key string</param>
            <returns>A JSONArray which is the value</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.optJSONObject(System.String)">
            <summary>
            Get an optional JSONObject associated with a key.
            It returns null if there is no such key, or if its value is not a JSONObject.
            </summary>
            <param name="key">A key string.</param>
            <returns>A JSONObject which is the value</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.optString(System.String)">
            <summary>
            Get an optional string associated with a key.
            It returns an empty string if there is no such key. If the value is not
            a string and is not null, then it is coverted to a string.
            </summary>
            <param name="key">A key string.</param>
            <returns>A string which is the value.</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.optString(System.String,System.String)">
            <summary>
            Get an optional string associated with a key.
            It returns the defaultValue if there is no such key.
            </summary>
            <param name="key">A key string.</param>
            <param name="defaultValue">The default</param>
            <returns>A string which is the value.</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.put(System.String,System.Object)">
            <summary>
            Put a key/value pair in the JSONObject. If the value is null,
            then the key will be removed from the JSONObject if it is present.
            </summary>
            <param name="key"> A key string.</param>
            <param name="val">
            An object which is the value. It should be of one of these
            types: Boolean, Double, Integer, JSONArray, JSONObject, String, or the
            JSONObject.NULL object.
            </param>
            <returns>JSONObject</returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.putOpt(System.String,System.Object)">
            <summary>
            Add a key value pair
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.remove(System.String)">
            <summary>
            Remove a object assosiateted with the given key
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.toJSONArray(Nii.JSON.JSONArray)">
            <summary>
            Append an array of JSONObjects to current object
            </summary>
            <param name="names"></param>
            <returns></returns>
        </member>
        <member name="M:Nii.JSON.JSONObject.ToString">
            <summary>
            Overridden to return a JSON formattet object as a string
            </summary>
            <returns>JSON object as formatted string</returns>
        </member>
        <member name="P:Nii.JSON.JSONObject.Item(System.Int32)">
            <summary>
            Return the key for the associated index
            </summary>
        </member>
        <member name="P:Nii.JSON.JSONObject.Item(System.String)">
            <summary>
            Get/Add an object with the associated key
            </summary>
        </member>
        <member name="P:Nii.JSON.JSONObject.Count">
            <summary>
            Return the number of JSON items in hashtable
            </summary>
        </member>
        <member name="T:Nii.JSON.JSONObject.JSONNull">
            <summary>
            Make a Null object
            JSONObject.NULL is equivalent to the value that JavaScript calls null,
            whilst C#'s null is equivalent to the value that JavaScript calls undefined.
            </summary>
        </member>
        <member name="M:Nii.JSON.JSONObject.JSONNull.ToString">
            <summary>
            Overriden to return "null"
            </summary>
            <returns>null</returns>
        </member>
        <member name="T:ExtAspNet.Layout">
            <summary>
            布局类型
            </summary>
        </member>
        <member name="T:ExtAspNet.LayoutHelper">
            <summary>
            布局类型名称
            </summary>
        </member>
        <member name="T:ExtAspNet.CheckBox">
            <summary>
            复选框控件
            </summary>
        </member>
        <member name="P:ExtAspNet.CheckBox.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:ExtAspNet.CheckBox.Checked">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="P:ExtAspNet.CheckBox.AutoPostBack">
            <summary>
            是否自动回发
            </summary>
        </member>
        <member name="E:ExtAspNet.CheckBox.CheckedChanged">
            <summary>
            复选框状态改变事件（需要启用AutoPostBack）
            </summary>
        </member>
        <member name="M:ExtAspNet.FormRow.ResolveColumnWidths(System.String)">
            <summary>
            格式化widths
            </summary>
            <param name="widths"></param>
            <returns></returns>
        </member>
        <member name="P:ExtAspNet.FormRow.ColumnWidths">
            <summary>
            各列的宽度，空格分割
            </summary>
        </member>
        <member name="P:ExtAspNet.GridPreRowEventArgs.DataItem">
            <summary>
            此行的数据源
            </summary>
        </member>
        <member name="P:ExtAspNet.GridPreRowEventArgs.RowIndex">
            <summary>
            行序号
            </summary>
        </member>
        <member name="P:ExtAspNet.AccordionPane.EnableCollapse">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.AccordionPane.ShowHeader">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.AccordionPane.EnableHightlight">
            <summary>
            鼠标移到标题栏是否高亮显示
            </summary>
        </member>
        <member name="T:ExtAspNet.TriggerBox">
            <summary>
            扩展文本框控件
            </summary>
        </member>
        <member name="P:ExtAspNet.TriggerBox.EnableEdit">
            <summary>
            是否允许编辑
            </summary>
        </member>
        <member name="P:ExtAspNet.TriggerBox.ShowTrigger">
            <summary>
            是否显示触发器
            </summary>
        </member>
        <member name="P:ExtAspNet.TriggerBox.EnablePostBack">
            <summary>
            是否可以回发
            </summary>
        </member>
        <member name="P:ExtAspNet.TriggerBox.TriggerIconUrl">
            <summary>
            右侧按钮的图片
            </summary>
        </member>
        <member name="P:ExtAspNet.TriggerBox.TriggerIcon">
            <summary>
            右侧的图标
            </summary>
        </member>
        <member name="P:ExtAspNet.TriggerBox.OnClientTriggerClick">
            <summary>
            点击按钮时需要执行的客户端脚本
            </summary>
        </member>
        <member name="E:ExtAspNet.TriggerBox.TriggerClick">
            <summary>
            点击按钮事件
            </summary>
        </member>
        <member name="P:ExtAspNet.MenuHyperLink.NavigateUrl">
            <summary>
            链接地址
            </summary>
        </member>
        <member name="P:ExtAspNet.MenuHyperLink.Target">
            <summary>
            链接目标
            </summary>
        </member>
        <member name="P:ExtAspNet.Timer.Interval">
            <summary>
            定时间隔（单位：秒）
            </summary>
        </member>
        <member name="E:ExtAspNet.Timer.Tick">
            <summary>
            定时事件
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlEntity">
            <summary>
            A utility class to replace special characters by entities and vice-versa.
            Follows HTML 4.0 specification found at http://www.w3.org/TR/html4/sgml/entities.html
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.HtmlEntity.Entitize(HtmlAgilityPack.HtmlNode)">
            <summary>
            Clone and entitize an HtmlNode. This will affect attribute values and nodes' text. It will also entitize all child nodes.
            </summary>
            <param name="node">The node to entitize.</param>
            <returns>An entitized cloned node.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlEntity.Entitize(System.String)">
            <summary>
            Replace characters above 127 by entities.
            </summary>
            <param name="text">The source text.</param>
            <returns>The result text.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlEntity.Entitize(System.String,System.Boolean)">
            <summary>
            Replace characters above 127 by entities.
            </summary>
            <param name="text">The source text.</param>
            <param name="useNames">If set to false, the function will not use known entities name. Default is true.</param>
            <returns>The result text.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlEntity.Entitize(System.String,System.Boolean,System.Boolean)">
            <summary>
            Replace characters above 127 by entities.
            </summary>
            <param name="text">The source text.</param>
            <param name="useNames">If set to false, the function will not use known entities name. Default is true.</param>
            <param name="entitizeQuotAmpAndLtGt">If set to true, the [quote], [ampersand], [lower than] and [greather than] characters will be entitized.</param>
            <returns>The result text</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlEntity.DeEntitize(System.String)">
            <summary>
            Replace known entities by characters.
            </summary>
            <param name="text">The source text.</param>
            <returns>The result text.</returns>
        </member>
        <member name="P:HtmlAgilityPack.HtmlEntity.EntityName">
            <summary>
            A collection of entities indexed by name.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlEntity.EntityValue">
            <summary>
            A collection of entities indexed by value.
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlAttribute">
            <summary>
            Represents an HTML attribute.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.HtmlAttribute.Clone">
            <summary>
            Creates a duplicate of this attribute.
            </summary>
            <returns>The cloned attribute.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlAttribute.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another attribute. Comparison is based on attributes' name.
            </summary>
            <param name="obj">An attribute to compare with this instance.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the names comparison.</returns>
        </member>
        <member name="P:HtmlAgilityPack.HtmlAttribute.Name">
            <summary>
            Gets the qualified name of the attribute.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlAttribute.Value">
            <summary>
            Gets or sets the value of the attribute.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlAttribute.Line">
            <summary>
            Gets the line number of this attribute in the document.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlAttribute.LinePosition">
            <summary>
            Gets the column number of this attribute in the document.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlAttribute.StreamPosition">
            <summary>
            Gets the stream position of this attribute in the document, relative to the start of the document.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlAttribute.OwnerNode">
            <summary>
            Gets the HTML node to which this attribute belongs.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlAttribute.OwnerDocument">
            <summary>
            Gets the HTML document to which this attribute belongs.
            </summary>
        </member>
        <member name="P:ExtAspNet.GroupPanelDesigner.CurrentControl">
            <summary>
            Current Control
            </summary>
        </member>
        <member name="P:ExtAspNet.GridDesigner.CurrentControl">
            <summary>
            Current Control
            </summary>
        </member>
        <member name="T:ExtAspNet.ButtonDesigner">
            <summary>
            按钮设计时
            </summary>
        </member>
        <member name="T:ExtAspNet.HyperLink">
            <summary>
            链接控件
            </summary>
        </member>
        <member name="P:ExtAspNet.HyperLink.Enabled">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.HyperLink.TabIndex">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.HyperLink.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:ExtAspNet.HyperLink.OnClientClick">
            <summary>
            点击链接时需要执行的客户端脚本
            </summary>
        </member>
        <member name="P:ExtAspNet.HyperLink.NavigateUrl">
            <summary>
            链接地址
            </summary>
        </member>
        <member name="P:ExtAspNet.HyperLink.Target">
            <summary>
            链接目标
            </summary>
        </member>
        <member name="T:ExtAspNet.Toolbar">
            <summary>
            工具条控件
            </summary>
        </member>
        <member name="P:ExtAspNet.Toolbar.Position">
            <summary>
            工具条的位置
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeCommandEventArgs.Node">
            <summary>
            Tree node.
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeCommandEventArgs.NodeID">
            <summary>
            Tree node id.
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeCommandEventArgs.CommandName">
            <summary>
            命令名称
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeCommandEventArgs.CommandArgument">
            <summary>
            命令参数
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.MixedCodeDocumentTextFragment">
            <summary>
            Represents a fragment of text in a mixed code document.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.MixedCodeDocumentTextFragment.Text">
            <summary>
            Gets the fragment text.
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlNodeNavigator">
            <summary>
            Represents an HTML navigator on an HTML document seen as a data store.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the HtmlNavigator and loads an HTML document from a stream.
            </summary>
            <param name="stream">The input stream.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the HtmlNavigator and loads an HTML document from a stream.
            </summary>
            <param name="stream">The input stream.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the stream.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the HtmlNavigator and loads an HTML document from a stream.
            </summary>
            <param name="stream">The input stream.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
            <summary>
            Initializes a new instance of the HtmlNavigator and loads an HTML document from a stream.
            </summary>
            <param name="stream">The input stream.</param>
            <param name="encoding">The character encoding to use.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the stream.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the HtmlNavigator and loads an HTML document from a stream.
            </summary>
            <param name="stream">The input stream.</param>
            <param name="encoding">The character encoding to use.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the stream.</param>
            <param name="buffersize">The minimum buffer size.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.#ctor(System.IO.TextReader)">
            <summary>
            Initializes a new instance of the HtmlNavigator and loads an HTML document from a TextReader.
            </summary>
            <param name="reader">The TextReader used to feed the HTML data into the document.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.#ctor(System.String)">
            <summary>
            Initializes a new instance of the HtmlNavigator and loads an HTML document from a file.
            </summary>
            <param name="path">The complete file path to be read.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the HtmlNavigator and loads an HTML document from a file.
            </summary>
            <param name="path">The complete file path to be read.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the file.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the HtmlNavigator and loads an HTML document from a file.
            </summary>
            <param name="path">The complete file path to be read.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.#ctor(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Initializes a new instance of the HtmlNavigator and loads an HTML document from a file.
            </summary>
            <param name="path">The complete file path to be read.</param>
            <param name="encoding">The character encoding to use.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the file.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.#ctor(System.String,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the HtmlNavigator and loads an HTML document from a file.
            </summary>
            <param name="path">The complete file path to be read.</param>
            <param name="encoding">The character encoding to use.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the file.</param>
            <param name="buffersize">The minimum buffer size.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.MoveToNext">
            <summary>
            Moves to the next sibling of the current node.
            </summary>
            <returns>true if the navigator is successful moving to the next sibling node, false if there are no more siblings or if the navigator is currently positioned on an attribute node. If false, the position of the navigator is unchanged.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.MoveToPrevious">
            <summary>
            Moves to the previous sibling of the current node.
            </summary>
            <returns>true if the navigator is successful moving to the previous sibling node, false if there is no previous sibling or if the navigator is currently positioned on an attribute node.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.MoveToFirst">
            <summary>
            Moves to the first sibling of the current node.
            </summary>
            <returns>true if the navigator is successful moving to the first sibling node, false if there is no first sibling or if the navigator is currently positioned on an attribute node.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.MoveToFirstChild">
            <summary>
            Moves to the first child of the current node.
            </summary>
            <returns>true if there is a first child node, otherwise false.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.MoveToParent">
            <summary>
            Moves to the parent of the current node.
            </summary>
            <returns>true if there is a parent node, otherwise false.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.MoveToRoot">
            <summary>
            Moves to the root node to which the current node belongs.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.MoveTo(System.Xml.XPath.XPathNavigator)">
            <summary>
            Moves to the same position as the specified HtmlNavigator.
            </summary>
            <param name="other">The HtmlNavigator positioned on the node that you want to move to.</param>
            <returns>true if successful, otherwise false. If false, the position of the navigator is unchanged.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.MoveToId(System.String)">
            <summary>
            Moves to the node that has an attribute of type ID whose value matches the specified string.
            </summary>
            <param name="id">A string representing the ID value of the node to which you want to move. This argument does not need to be atomized.</param>
            <returns>true if the move was successful, otherwise false. If false, the position of the navigator is unchanged.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)">
            <summary>
            Determines whether the current HtmlNavigator is at the same position as the specified HtmlNavigator.
            </summary>
            <param name="other">The HtmlNavigator that you want to compare against.</param>
            <returns>true if the two navigators have the same position, otherwise, false.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.Clone">
            <summary>
            Creates a new HtmlNavigator positioned at the same node as this HtmlNavigator.
            </summary>
            <returns>A new HtmlNavigator object positioned at the same node as the original HtmlNavigator.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.GetAttribute(System.String,System.String)">
            <summary>
            Gets the value of the HTML attribute with the specified LocalName and NamespaceURI.
            </summary>
            <param name="localName">The local name of the HTML attribute.</param>
            <param name="namespaceURI">The namespace URI of the attribute. Unsupported with the HtmlNavigator implementation.</param>
            <returns>The value of the specified HTML attribute. String.Empty or null if a matching attribute is not found or if the navigator is not positioned on an element node.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.MoveToAttribute(System.String,System.String)">
            <summary>
            Moves to the HTML attribute with matching LocalName and NamespaceURI.
            </summary>
            <param name="localName">The local name of the HTML attribute.</param>
            <param name="namespaceURI">The namespace URI of the attribute. Unsupported with the HtmlNavigator implementation.</param>
            <returns>true if the HTML attribute is found, otherwise, false. If false, the position of the navigator does not change.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.MoveToFirstAttribute">
            <summary>
            Moves to the first HTML attribute.
            </summary>
            <returns>true if the navigator is successful moving to the first HTML attribute, otherwise, false.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.MoveToNextAttribute">
            <summary>
            Moves to the next HTML attribute.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.GetNamespace(System.String)">
            <summary>
            Returns the value of the namespace node corresponding to the specified local name.
            Always returns string.Empty for the HtmlNavigator implementation.
            </summary>
            <param name="name">The local name of the namespace node.</param>
            <returns>Always returns string.Empty for the HtmlNavigator implementation.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.MoveToNamespace(System.String)">
            <summary>
            Moves the XPathNavigator to the namespace node with the specified local name. 
            Always returns false for the HtmlNavigator implementation.
            </summary>
            <param name="name">The local name of the namespace node.</param>
            <returns>Always returns false for the HtmlNavigator implementation.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)">
            <summary>
            Moves the XPathNavigator to the first namespace node of the current element.
            Always returns false for the HtmlNavigator implementation.
            </summary>
            <param name="scope">An XPathNamespaceScope value describing the namespace scope.</param>
            <returns>Always returns false for the HtmlNavigator implementation.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)">
            <summary>
            Moves the XPathNavigator to the next namespace node.
            Always returns falsefor the HtmlNavigator implementation.
            </summary>
            <param name="scope">An XPathNamespaceScope value describing the namespace scope.</param>
            <returns>Always returns false for the HtmlNavigator implementation.</returns>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNodeNavigator.LocalName">
            <summary>
            Gets the name of the current HTML node without the namespace prefix.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNodeNavigator.NamespaceURI">
            <summary>
            Gets the namespace URI (as defined in the W3C Namespace Specification) of the current node.
            Always returns string.Empty in the case of HtmlNavigator implementation.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNodeNavigator.Name">
            <summary>
            Gets the qualified name of the current node.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNodeNavigator.Prefix">
            <summary>
            Gets the prefix associated with the current node.
            Always returns string.Empty in the case of HtmlNavigator implementation.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNodeNavigator.NodeType">
            <summary>
            Gets the type of the current node.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNodeNavigator.Value">
            <summary>
            Gets the text value of the current node.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNodeNavigator.BaseURI">
            <summary>
            Gets the base URI for the current node.
            Always returns string.Empty in the case of HtmlNavigator implementation.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNodeNavigator.XmlLang">
            <summary>
            Gets the xml:lang scope for the current node.
            Always returns string.Empty in the case of HtmlNavigator implementation.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNodeNavigator.IsEmptyElement">
            <summary>
            Gets a value indicating whether the current node is an empty element.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNodeNavigator.NameTable">
            <summary>
            Gets the XmlNameTable associated with this implementation.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNodeNavigator.HasAttributes">
            <summary>
            Gets a value indicating whether the current node has child nodes.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNodeNavigator.HasChildren">
            <summary>
            Gets a value indicating whether the current node has child nodes.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNodeNavigator.CurrentNode">
            <summary>
            Gets the current HTML node.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNodeNavigator.CurrentDocument">
            <summary>
            Gets the current HTML document.
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.Crc32">
            <summary>
            A utility class to compute CRC32.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.Crc32.CRC32String(System.String)">
            <summary>
            Compute a checksum for a given string.
            </summary>
            <param name="text">The string to compute the checksum for.</param>
            <returns>The computed checksum.</returns>
        </member>
        <member name="M:HtmlAgilityPack.Crc32.CRC32Bytes(System.Byte[])">
            <summary>
            Compute a checksum for a given array of bytes.
            </summary>
            <param name="bytes">The array of bytes to compute the checksum for.</param>
            <returns>The computed checksum.</returns>
        </member>
        <member name="T:ExtAspNet.ToolbarSeparatorDesigner">
            <summary>
            按钮设计时
            </summary>
        </member>
        <member name="M:ExtAspNet.ToolbarSeparatorDesigner.GetDesignTimeHtml">
            <summary>
            设计时展示
            </summary>
            <returns></returns>
        </member>
        <member name="T:ExtAspNet.ResourceManager">
            <summary>
            存在 Page.Items 上下文中，向页面注册资源
            </summary>
        </member>
        <member name="F:ExtAspNet.ResourceManager._startupCssDic">
            <summary>
            需要向页面注册的样式列表
            </summary>
        </member>
        <member name="M:ExtAspNet.ResourceManager.Page_PreRenderComplete(System.Object,System.EventArgs)">
            <summary>
            准备呈现页面内容，在保存页面状态之前
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ExtAspNet.ResourceManager.SetupFirstLoadResource">
            <summary>
            注册页面第一次加载时的样式和脚本
            </summary>
        </member>
        <member name="M:ExtAspNet.ResourceManager.RegisterStartupScript">
            <summary>
            注册页面脚本
            </summary>
        </member>
        <member name="M:ExtAspNet.ResourceManager.IsStartupScriptRegistered(System.String)">
            <summary>
            是否注册startup脚本
            </summary>
            <param name="scriptKey"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ResourceManager.GetStartupScript(System.String)">
            <summary>
            取得页面初始化时脚本
            </summary>
            <param name="script"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ResourceManager.GetSortedControlScriptList">
            <summary>
            返回经过排序的 _startupControlScriptList 列表，子控件排在父控件的前面
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ResourceManager.GetInsertIndex(System.Web.UI.Control,System.Collections.Generic.List{ExtAspNet.ScriptBlock})">
            <summary>
            取得应该将Script插入的位置
            modified by sanshi.ustc@gmail.com, 要能够向上回溯，因为控件A的父的父控件可能不存在列表中
            </summary>
            <param name="control"></param>
            <param name="testList"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ResourceManager.AddStartupCSS(System.String,System.String)">
            <summary>
            添加样式
            </summary>
            <param name="key"></param>
            <param name="cssConent"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ResourceManager.RemoveStartupCSS(System.String)">
            <summary>
            删除已经添加的CSS样式
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:ExtAspNet.ResourceManager.AddStartupScript(System.Web.UI.Control,System.String,System.String)">
            <summary>
            添加脚本
            相同控件的脚本合并在一起（sanshi.ustc@gmail.com 2008-7-4）
            </summary>
            <param name="control"></param>
            <param name="script"></param>
            <param name="extraScript"></param>
        </member>
        <member name="M:ExtAspNet.ResourceManager.IsStartupScriptExist(System.Web.UI.Control)">
            <summary>
            控件control的注册脚本是否存在
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="P:ExtAspNet.ResourceManager.AjaxScriptList">
            <summary>
            AJAX时每个控件需要注册的脚本
            </summary>
        </member>
        <member name="P:ExtAspNet.ResourceManager.AjaxAbsoluteScriptList">
            <summary>
            AJAX时不依赖控件的脚本
            </summary>
        </member>
        <member name="P:ExtAspNet.ResourceManager.AjaxShortNameList">
            <summary>
            AJAX时使用到的所有短名称列表
            比如：X('SimpleForm1_tbxUserName')  -> cmp0
            X('SimpleForm1_tbxPassword') -> cmp1
            </summary>
        </member>
        <member name="P:ExtAspNet.ResourceManager.Instance">
            <summary>
            取得 ResourceManager 的实例，单件模式
            </summary>
        </member>
        <member name="T:Nii.JSON.JSONUtils">
            <summary>
             Public Domain 2002 JSON.org
             @author JSON.org
             @version 0.1
             Ported to C# by Are Bjolseth, teleplan.no
            </summary>
        </member>
        <member name="M:Nii.JSON.JSONUtils.Enquote(System.String)">
            <summary>
            Produce a string in double quotes with backslash sequences in all the right places.
            </summary>
            <param name="s">A String</param>
            <returns>A String correctly formatted for insertion in a JSON message.</returns>
        </member>
        <member name="P:ExtAspNet.ToolbarText.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="T:ExtAspNet.Calendar">
            <summary>
            日期控件
            </summary>
        </member>
        <member name="P:ExtAspNet.Calendar.SelectedDate">
            <summary>
            选择的日期
            </summary>
        </member>
        <member name="P:ExtAspNet.Calendar.DateFormatString">
            <summary>
            日期格式
            </summary>
        </member>
        <member name="P:ExtAspNet.Calendar.MaxDate">
            <summary>
            最大日期
            </summary>
        </member>
        <member name="P:ExtAspNet.Calendar.MinDate">
            <summary>
            最小日期
            </summary>
        </member>
        <member name="T:ExtAspNet.TreeNode">
            <summary>
            树节点
            </summary>
        </member>
        <member name="M:ExtAspNet.TreeNode.DataBindRow">
            <summary>
            绑定行的值
            </summary>
        </member>
        <member name="M:ExtAspNet.TreeNode.SetPropertyValue(System.String,System.String)">
            <summary>
            设置属性的值
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="P:ExtAspNet.TreeNode.EnablePostBack">
            <summary>
            是否可以回发
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeNode.OnClientClick">
            <summary>
            点击按钮时需要执行的客户端脚本
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeNode.CommandName">
            <summary>
            命令名称
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeNode.CommandArgument">
            <summary>
            命令参数
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeNode.Checked">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeNode.EnableCheckBox">
            <summary>
            是否启用多选框
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeNode.AutoPostBack">
            <summary>
            是否自动回发（单击树节点）
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeNode.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeNode.NodeID">
            <summary>
            Tree node id.
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeNode.Leaf">
            <summary>
            是否叶子节点
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeNode.Enabled">
            <summary>
            是否可用
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeNode.Expanded">
            <summary>
            是否展开
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeNode.Target">
            <summary>
            链接目标
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeNode.NavigateUrl">
            <summary>
            链接地址
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeNode.IconUrl">
            <summary>
            图标地址
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeNode.Icon">
            <summary>
            预定义图标
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeNode.ToolTip">
            <summary>
            提示文本
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeNode.SingleClickExpand">
            <summary>
            点击可切换节点的折叠展开状态
            </summary>
        </member>
        <member name="T:ExtAspNet.Accordion">
            <summary>
            面板控件
            </summary>
        </member>
        <member name="P:ExtAspNet.Accordion.Items">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Accordion.EnableIFrame">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Accordion.IFrameUrl">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Accordion.IFrameName">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Accordion.Layout">
            <summary>
            布局类型
            </summary>
        </member>
        <member name="M:ExtAspNet.Confirm.Show(System.String)">
            <summary>
            显示消息框
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ExtAspNet.Confirm.Show(System.String,System.String)">
            <summary>
            显示消息框
            </summary>
            <param name="message"></param>
            <param name="title"></param>
        </member>
        <member name="M:ExtAspNet.Confirm.Show(System.String,ExtAspNet.MessageBoxIcon)">
            <summary>
            显示消息框
            </summary>
            <param name="message"></param>
            <param name="icon"></param>
        </member>
        <member name="M:ExtAspNet.Confirm.Show(System.String,System.String,ExtAspNet.MessageBoxIcon)">
            <summary>
            显示消息框
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <param name="icon"></param>
        </member>
        <member name="M:ExtAspNet.Confirm.GetShowReference(System.String,System.String,ExtAspNet.MessageBoxIcon)">
            <summary>
            取得显示消息框引用
            </summary>
            <param name="message"></param>
            <param name="icon"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Confirm.GetShowReference(System.String,System.String,ExtAspNet.MessageBoxIcon,System.String,System.String,ExtAspNet.Target)">
            <summary>
            取得显示消息框引用
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <param name="icon"></param>
            <returns></returns>
        </member>
        <member name="P:ExtAspNet.SimpleFormDesigner.CurrentControl">
            <summary>
            Current Control
            </summary>
        </member>
        <member name="T:ExtAspNet.ControlBaseContainerDesigner">
            <summary>
            设计时支持
            </summary>
        </member>
        <member name="M:ExtAspNet.ControlBaseContainerDesigner.GetDesignTimeHtml">
            <summary>
            设计时展示
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ControlBaseContainerDesigner.GetErrorDesignTimeHtml(System.Exception)">
            <summary>
            出错时设计时显示
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ControlBaseContainerDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            初始化控件设计时
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:ExtAspNet.ControlBaseContainerDesigner.GetBlankImageUrl">
            <summary>
            取得空白图片的URL
            </summary>
            <returns></returns>
        </member>
        <member name="P:ExtAspNet.ControlBaseContainerDesigner.CurrentControl">
            <summary>
            当前呈现的控件
            </summary>
        </member>
        <member name="P:ExtAspNet.ControlBaseContainerDesigner.AllowResize">
            <summary>
            是否允许调整大小
            </summary>
        </member>
        <member name="M:ExtAspNet.CommonResourceHelper.AddJavascriptIncludeToPageBottom(System.Web.UI.Page,System.String,System.String)">
            <summary>
            添加JS文件到页面的底部
            </summary>
            <param name="page"></param>
            <param name="controlId"></param>
            <param name="resourceName"></param>
        </member>
        <member name="M:ExtAspNet.CommonResourceHelper.AddStylesheetIncludeToHead(System.Web.UI.Page,System.String,System.String)">
            <summary>
            添加样式表到页头
            </summary>
            <param name="controlId"></param>
            <param name="resourceName"></param>
        </member>
        <member name="M:ExtAspNet.CommonResourceHelper.AddContentToHead(System.Web.UI.Page,System.String,System.String)">
            <summary>
            向页面头部添加内容
            </summary>
            <param name="controlId"></param>
            <param name="resourceName"></param>
        </member>
        <member name="M:ExtAspNet.CommonResourceHelper.IsHeaderContains(System.Web.UI.Page,System.String)">
            <summary>
            页头是否包含控件
            </summary>
            <param name="controlId"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.CommonResourceHelper.GetNextControlIndex(System.Web.UI.Page)">
            <summary>
            取得下一个控件的位置
            </summary>
            <returns></returns>
        </member>
        <member name="T:ExtAspNet.RegexPattern">
            <summary>
            正则表达式常用类型
            </summary>
        </member>
        <member name="T:ExtAspNet.RegexPatternHelper">
            <summary>
            正则表达式常用类型 内容
            </summary>
        </member>
        <member name="T:ExtAspNet.Theme">
            <summary>
            样式
            </summary>
        </member>
        <member name="T:ExtAspNet.ThemeHelper">
            <summary>
            样式的类型名称
            </summary>
        </member>
        <member name="M:ExtAspNet.GridRow.DataBindRow">
            <summary>
            绑定行的值
            </summary>
        </member>
        <member name="P:ExtAspNet.GridRow.DataItem">
            <summary>
            本行对应的数据源（不维护状态）
            </summary>
        </member>
        <member name="P:ExtAspNet.GridRow.RowIndex">
            <summary>
            第几行
            </summary>
        </member>
        <member name="P:ExtAspNet.GridRow.DataKeys">
            <summary>
            此行DataKeyNames字段的值
            </summary>
        </member>
        <member name="T:ExtAspNet.GridRowControl">
            <summary>
            Only used to do databind.
            </summary>
        </member>
        <member name="P:ExtAspNet.GridCommandEventArgs.RowIndex">
            <summary>
            行序号
            </summary>
        </member>
        <member name="P:ExtAspNet.MenuText.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlNodeType">
            <summary>
            Represents the type of a node.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlNodeType.Document">
            <summary>
            The root of a document.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlNodeType.Element">
            <summary>
            An HTML element.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlNodeType.Comment">
            <summary>
            An HTML comment.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlNodeType.Text">
            <summary>
            A text node is always the child of an element or a document node.
            </summary>
        </member>
        <member name="T:ExtAspNet.HyperLinkDesigner">
            <summary>
            按钮设计时
            </summary>
        </member>
        <member name="F:ExtAspNet.XState._clientPropertiesModifiedInServer">
            <summary>
            在服务器端修改的客户端可改变属性的列表
            </summary>
        </member>
        <member name="T:ExtAspNet.CollapseMode">
            <summary>
            CollapseMode supports two configuration values.
            </summary>
        </member>
        <member name="T:ExtAspNet.CollapseModeName">
            <summary>
            CollapseMode supports two configuration values.
            </summary>
        </member>
        <member name="M:ExtAspNet.Tab.OnInit(System.EventArgs)">
            <summary>
            Tab 控件必须包含在 TabStrip 中
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:ExtAspNet.Tab.GetHiddenPropertyChangedScript">
            <summary>
            Override the same method exist in ControlBase, because we have separate logic to hide this control.
            </summary>
        </member>
        <member name="M:ExtAspNet.Tab.GetShowReference">
            <summary>
            显示Tab的JavaScript代码
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Tab.GetHideReference">
            <summary>
            显示Tab的JavaScript代码
            </summary>
            <returns></returns>
        </member>
        <member name="P:ExtAspNet.Tab.ShowBorder">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Tab.EnableCollapse">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Tab.EnableClose">
            <summary>
            是否可以关闭
            </summary>
        </member>
        <member name="P:ExtAspNet.Tab.AutoHeight">
            <summary>
            是否自动高度
            </summary>
        </member>
        <member name="P:ExtAspNet.Tab.AutoWidth">
            <summary>
            是否自动宽度
            </summary>
        </member>
        <member name="T:ExtAspNet.DropDownList">
            <summary>
            下拉列表控件
            </summary>
        </member>
        <member name="M:ExtAspNet.DropDownList.DataBind">
            <summary>
            Bind to datasource.
            </summary>
        </member>
        <member name="M:ExtAspNet.DropDownList.DataBindToDataTable(System.Data.DataTable)">
            <summary>
            Bind to a datatable.
            </summary>
            <param name="dataView"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
        </member>
        <member name="M:ExtAspNet.DropDownList.DataBindToEnumerable(System.Collections.IEnumerable)">
            <summary>
            Bind to an enumerable list.
            </summary>
            <param name="enumerable"></param>
            <param name="startIndex"></param>
            <param name="endIndex"></param>
        </member>
        <member name="M:ExtAspNet.DropDownList.GetPropertyValue(System.Object,System.String)">
            <summary>
            取得属性值
            </summary>
            <param name="obj"></param>
            <param name="propertyName"></param>
        </member>
        <member name="P:ExtAspNet.DropDownList.SelectedValue">
            <summary>
            选中项的值
            </summary>
        </member>
        <member name="P:ExtAspNet.DropDownList.SelectedIndex">
            <summary>
            选中项的序号
            </summary>
        </member>
        <member name="P:ExtAspNet.DropDownList.SelectedText">
            <summary>
            选中项的文本
            </summary>
        </member>
        <member name="P:ExtAspNet.DropDownList.SelectedItem">
            <summary>
            选中项
            </summary>
        </member>
        <member name="P:ExtAspNet.DropDownList.EnableSimulateTree">
            <summary>
            是否启用模拟树显示
            </summary>
        </member>
        <member name="P:ExtAspNet.DropDownList.DataSimulateTreeLevelField">
            <summary>
            此列模拟树显示时的层次字段
            </summary>
        </member>
        <member name="P:ExtAspNet.DropDownList.DataEnableSelectField">
            <summary>
            是否可选择的字段
            </summary>
        </member>
        <member name="P:ExtAspNet.DropDownList.AutoPostBack">
            <summary>
            是否自动回发
            </summary>
        </member>
        <member name="P:ExtAspNet.DropDownList.Resizable">
            <summary>
            是否可以改变下拉列表的宽度
            </summary>
        </member>
        <member name="P:ExtAspNet.DropDownList.DataTextField">
            <summary>
            显示文本字段
            </summary>
        </member>
        <member name="P:ExtAspNet.DropDownList.DataTextFormatString">
            <summary>
            显示文本的格式化字符串
            </summary>
        </member>
        <member name="P:ExtAspNet.DropDownList.DataValueField">
            <summary>
            显示值字段
            </summary>
        </member>
        <member name="P:ExtAspNet.DropDownList.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="E:ExtAspNet.DropDownList.SelectedIndexChanged">
            <summary>
            选中项改变事件（需要启用AutoPostBack）
            </summary>
        </member>
        <member name="T:ExtAspNet.GroupPanel">
            <summary>
            分组面板控件
            </summary>
        </member>
        <member name="P:ExtAspNet.GroupPanel.ShowHeader">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.GroupPanel.ShowBorder">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="M:ExtAspNet.TreeNodeCollection.ResolveTreeNode(ExtAspNet.TreeNode)">
            <summary>
            设置每个节点的Tree实例
            </summary>
            <param name="node"></param>
        </member>
        <member name="P:ExtAspNet.RegionPanel.Items">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.RegionPanel.EnableIFrame">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.RegionPanel.IFrameUrl">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.RegionPanel.IFrameName">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.RegionPanel.Layout">
            <summary>
            布局类型
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.MixedCodeDocumentCodeFragment">
            <summary>
            Represents a fragment of code in a mixed code document.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.MixedCodeDocumentCodeFragment.Code">
            <summary>
            Gets the fragment code text.
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlTextNode">
            <summary>
            Represents an HTML text node.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlTextNode.InnerHtml">
            <summary>
            Gets or Sets the HTML between the start and end tags of the object. In the case of a text node, it is equals to OuterHtml.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlTextNode.OuterHtml">
            <summary>
            Gets or Sets the object and its content in HTML.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlTextNode.Text">
            <summary>
            Gets or Sets the text of the node.
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlDocument">
            <summary>
            Represents a complete HTML document.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlDocument.OptionComputeChecksum">
            <summary>
            Defines if a checksum must be computed for the document while parsing. Default is false.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlDocument.OptionReadEncoding">
            <summary>
            Defines if declared encoding must be read from the document.
            Declared encoding is determined using the meta http-equiv="content-type" content="text/html;charset=XXXXX" html node.
            Default is true.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlDocument.OptionCheckSyntax">
            <summary>
            Defines if non closed nodes will be checked at the end of parsing. Default is true.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlDocument.OptionUseIdAttribute">
            <summary>
            Defines if the 'id' attribute must be specifically used. Default is true.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlDocument.OptionWriteEmptyNodes">
            <summary>
            Defines if empty nodes must be written as closed during output. Default is false.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlDocument.OptionOutputAsXml">
            <summary>
            Defines if output must conform to XML, instead of HTML.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlDocument.OptionOutputUpperCase">
            <summary>
            Defines if name must be output in uppercase. Default is false.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlDocument.OptionOutputOptimizeAttributeValues">
            <summary>
            Defines if attribute value output must be optimized (not bound with double quotes if it is possible). Default is false.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlDocument.OptionAddDebuggingAttributes">
            <summary>
            Adds Debugging attributes to node. Default is false.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlDocument.OptionExtractErrorSourceText">
            <summary>
            Defines if source text must be extracted while parsing errors.
            If the document has a lot of errors, or cascading errors, parsing performance can be dramatically affected if set to true.
            Default is false.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlDocument.OptionAutoCloseOnEnd">
            <summary>
            Defines if closing for non closed nodes must be done at the end or directly in the document.
            Setting this to true can actually change how browsers render the page. Default is false.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlDocument.OptionFixNestedTags">
            <summary>
            Defines if LI, TR, TH, TD tags must be partially fixed when nesting errors are detected. Default is false.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlDocument.OptionExtractErrorSourceTextMaxLength">
            <summary>
            Defines the maximum length of source text or parse errors. Default is 100.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlDocument.OptionDefaultStreamEncoding">
            <summary>
            Defines the default stream encoding to use. Default is System.Text.Encoding.Default.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlDocument.OptionStopperNodeName">
            <summary>
            Defines the name of a node that will throw the StopperNodeException when found as an end node. Default is null.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.#ctor">
            <summary>
            Creates an instance of an HTML document.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.HtmlEncode(System.String)">
            <summary>
            Applies HTML encoding to a specified string.
            </summary>
            <param name="html">The input string to encode. May not be null.</param>
            <returns>The encoded string.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.DetectEncoding(System.IO.Stream)">
            <summary>
            Detects the encoding of an HTML stream.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <returns>The detected encoding.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.DetectEncoding(System.String)">
            <summary>
            Detects the encoding of an HTML file.
            </summary>
            <param name="path">Path for the file containing the HTML document to detect. May not be null.</param>
            <returns>The detected encoding.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.DetectEncodingHtml(System.String)">
            <summary>
            Detects the encoding of an HTML text.
            </summary>
            <param name="html">The input html text. May not be null.</param>
            <returns>The detected encoding.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.DetectEncoding(System.IO.TextReader)">
            <summary>
            Detects the encoding of an HTML text provided on a TextReader.
            </summary>
            <param name="reader">The TextReader used to feed the HTML. May not be null.</param>
            <returns>The detected encoding.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.Load(System.IO.Stream)">
            <summary>
            Loads an HTML document from a stream.
            </summary>
            <param name="stream">The input stream.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.Load(System.IO.Stream,System.Boolean)">
            <summary>
            Loads an HTML document from a stream.
            </summary>
            <param name="stream">The input stream.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the stream.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.Load(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Loads an HTML document from a stream.
            </summary>
            <param name="stream">The input stream.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.Load(System.IO.Stream,System.Text.Encoding,System.Boolean)">
            <summary>
            Loads an HTML document from a stream.
            </summary>
            <param name="stream">The input stream.</param>
            <param name="encoding">The character encoding to use.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the stream.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.Load(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>
            Loads an HTML document from a stream.
            </summary>
            <param name="stream">The input stream.</param>
            <param name="encoding">The character encoding to use.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the stream.</param>
            <param name="buffersize">The minimum buffer size.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.Load(System.String)">
            <summary>
            Loads an HTML document from a file.
            </summary>
            <param name="path">The complete file path to be read. May not be null.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.Load(System.String,System.Boolean)">
            <summary>
            Loads an HTML document from a file.
            </summary>
            <param name="path">The complete file path to be read. May not be null.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the file.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.Load(System.String,System.Text.Encoding)">
            <summary>
            Loads an HTML document from a file.
            </summary>
            <param name="path">The complete file path to be read. May not be null.</param>
            <param name="encoding">The character encoding to use. May not be null.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.Load(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Loads an HTML document from a file.
            </summary>
            <param name="path">The complete file path to be read. May not be null.</param>
            <param name="encoding">The character encoding to use. May not be null.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the file.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.Load(System.String,System.Text.Encoding,System.Boolean,System.Int32)">
            <summary>
            Loads an HTML document from a file.
            </summary>
            <param name="path">The complete file path to be read. May not be null.</param>
            <param name="encoding">The character encoding to use. May not be null.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the file.</param>
            <param name="buffersize">The minimum buffer size.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.LoadHtml(System.String)">
            <summary>
            Loads the HTML document from the specified string.
            </summary>
            <param name="html">String containing the HTML document to load. May not be null.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.DetectEncodingAndLoad(System.String)">
            <summary>
            Detects the encoding of an HTML document from a file first, and then loads the file.
            </summary>
            <param name="path">The complete file path to be read.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.DetectEncodingAndLoad(System.String,System.Boolean)">
            <summary>
            Detects the encoding of an HTML document from a file first, and then loads the file.
            </summary>
            <param name="path">The complete file path to be read. May not be null.</param>
            <param name="detectEncoding">true to detect encoding, false otherwise.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.Load(System.IO.TextReader)">
            <summary>
            Loads the HTML document from the specified TextReader.
            </summary>
            <param name="reader">The TextReader used to feed the HTML data into the document. May not be null.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.Save(System.IO.Stream)">
            <summary>
            Saves the HTML document to the specified stream.
            </summary>
            <param name="outStream">The stream to which you want to save.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.Save(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Saves the HTML document to the specified stream.
            </summary>
            <param name="outStream">The stream to which you want to save. May not be null.</param>
            <param name="encoding">The character encoding to use. May not be null.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.Save(System.String)">
            <summary>
            Saves the mixed document to the specified file.
            </summary>
            <param name="filename">The location of the file where you want to save the document.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.Save(System.String,System.Text.Encoding)">
            <summary>
            Saves the mixed document to the specified file.
            </summary>
            <param name="filename">The location of the file where you want to save the document. May not be null.</param>
            <param name="encoding">The character encoding to use. May not be null.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.Save(System.IO.StreamWriter)">
            <summary>
            Saves the HTML document to the specified StreamWriter.
            </summary>
            <param name="writer">The StreamWriter to which you want to save.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.Save(System.IO.TextWriter)">
            <summary>
            Saves the HTML document to the specified TextWriter.
            </summary>
            <param name="writer">The TextWriter to which you want to save. May not be null.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.Save(System.Xml.XmlWriter)">
            <summary>
            Saves the HTML document to the specified XmlWriter.
            </summary>
            <param name="writer">The XmlWriter to which you want to save.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.CreateNavigator">
            <summary>
            Creates a new XPathNavigator object for navigating this HTML document.
            </summary>
            <returns>An XPathNavigator object. The XPathNavigator is positioned on the root of the document.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.GetXmlName(System.String)">
            <summary>
            Gets a valid XML name.
            </summary>
            <param name="name">Any text.</param>
            <returns>A string that is a valid XML name.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.GetElementbyId(System.String)">
            <summary>
            Gets the HTML node with the specified 'id' attribute value.
            </summary>
            <param name="id">The attribute id to match. May not be null.</param>
            <returns>The HTML node with the matching id or null if not found.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.CreateElement(System.String)">
            <summary>
            Creates an HTML element node with the specified name.
            </summary>
            <param name="name">The qualified name of the element. May not be null.</param>
            <returns>The new HTML node.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.CreateComment">
            <summary>
            Creates an HTML comment node.
            </summary>
            <returns>The new HTML comment node.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.CreateComment(System.String)">
            <summary>
            Creates an HTML comment node with the specified comment text.
            </summary>
            <param name="comment">The comment text. May not be null.</param>
            <returns>The new HTML comment node.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.CreateTextNode">
            <summary>
            Creates an HTML text node.
            </summary>
            <returns>The new HTML text node.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.CreateTextNode(System.String)">
            <summary>
            Creates an HTML text node with the specified text.
            </summary>
            <param name="text">The text of the node. May not be null.</param>
            <returns>The new HTML text node.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.CreateAttribute(System.String)">
            <summary>
            Creates an HTML attribute with the specified name.
            </summary>
            <param name="name">The name of the attribute. May not be null.</param>
            <returns>The new HTML attribute.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.CreateAttribute(System.String,System.String)">
            <summary>
            Creates an HTML attribute with the specified name.
            </summary>
            <param name="name">The name of the attribute. May not be null.</param>
            <param name="value">The value of the attribute.</param>
            <returns>The new HTML attribute.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlDocument.IsWhiteSpace(System.Int32)">
            <summary>
            Determines if the specified character is considered as a whitespace character.
            </summary>
            <param name="c">The character to check.</param>
            <returns>true if if the specified character is considered as a whitespace character.</returns>
        </member>
        <member name="P:HtmlAgilityPack.HtmlDocument.Remainder">
            <summary>
            Gets the remaining text.
            Will always be null if OptionStopperNodeName is null.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlDocument.RemainderOffset">
            <summary>
            Gets the offset of Remainder in the original Html text.
            If OptionStopperNodeName is null, this will return the length of the original Html text.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlDocument.ParseErrors">
            <summary>
            Gets a list of parse errors found in the document.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlDocument.StreamEncoding">
            <summary>
            Gets the document's stream encoding.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlDocument.DeclaredEncoding">
            <summary>
            Gets the document's declared encoding.
            Declared encoding is determined using the meta http-equiv="content-type" content="text/html;charset=XXXXX" html node.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlDocument.Encoding">
            <summary>
            Gets the document's output encoding.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlDocument.DocumentNode">
            <summary>
            Gets the root node of the document.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlDocument.CheckSum">
            <summary>
            Gets the document CRC32 checksum if OptionComputeChecksum was set to true before parsing, 0 otherwise.
            </summary>
        </member>
        <member name="P:ExtAspNet.WindowDesigner.CurrentControl">
            <summary>
            Current Control
            </summary>
        </member>
        <member name="T:ExtAspNet.ToolbarTextDesigner">
            <summary>
            按钮设计时
            </summary>
        </member>
        <member name="M:ExtAspNet.ToolbarTextDesigner.GetDesignTimeHtml">
            <summary>
            设计时展示
            </summary>
            <returns></returns>
        </member>
        <member name="T:ExtAspNet.ToolbarFillDesigner">
            <summary>
            按钮设计时
            </summary>
        </member>
        <member name="M:ExtAspNet.ToolbarFillDesigner.GetDesignTimeHtml">
            <summary>
            设计时展示
            </summary>
            <returns></returns>
        </member>
        <member name="T:ExtAspNet.ClientJavascriptIDManager">
            <summary>
            存在 Page.Items 上下文中，用于生成JavascriptID
            </summary>
        </member>
        <member name="T:ExtAspNet.JsArrayBuilder">
            <summary>
            创建Javascript数组参数
            </summary>
        </member>
        <member name="M:ExtAspNet.JsArrayBuilder.RemoveProperty(System.String)">
            <summary>
            删除属性
            </summary>
            <param name="propertyValue"></param>
        </member>
        <member name="M:ExtAspNet.JsArrayBuilder.AddProperty(System.Object)">
            <summary>
            添加属性
            </summary>
            <param name="propertyValue"></param>
        </member>
        <member name="M:ExtAspNet.JsArrayBuilder.AddProperty(System.Object,System.Boolean)">
            <summary>
            添加属性
            </summary>
            <param name="propertyValue"></param>
            <param name="persistOriginal">是否保持原样</param>
        </member>
        <member name="M:ExtAspNet.JsArrayBuilder.ToString">
            <summary>
            返回对象的Json字符串表示
            </summary>
            <returns></returns>
        </member>
        <member name="P:ExtAspNet.JsArrayBuilder.Count">
            <summary>
            已经添加的数目
            </summary>
        </member>
        <member name="M:ExtAspNet.ResourceHelper.GetWebResourceUrl(System.Web.UI.Page,System.String)">
            <summary>
            嵌入资源url地址
            </summary>
            <param name="resourceName"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ResourceHelper.GetWebResourceUrl(System.ComponentModel.ISite,System.String)">
            <summary>
            设计时嵌入资源url地址
            </summary>
            <param name="site"></param>
            <param name="resourceName"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ResourceHelper.GetResourceContent(System.String)">
            <summary>
            取得资源的内容
            </summary>
            <param name="resourceName"></param>
            <returns></returns>
        </member>
        <member name="T:ExtAspNet.AbsoluteScriptBlock">
            <summary>
            脚本（不和控件关联的脚本）
            </summary>
        </member>
        <member name="P:ExtAspNet.AbsoluteScriptBlock.Script">
            <summary>
            脚本
            </summary>
        </member>
        <member name="P:ExtAspNet.AbsoluteScriptBlock.Level">
            <summary>
            层次（层次越高，注册越靠后）（缺省100）
            负值表示在所有注册脚本之前执行
            </summary>
        </member>
        <member name="M:ExtAspNet.Region.OnInit(System.EventArgs)">
            <summary>
            Tab 控件必须包含在 TabStrip 中
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:ExtAspNet.Region.Split">
            <summary>
            是否可以拖动边界
            </summary>
        </member>
        <member name="P:ExtAspNet.Region.EnableSplitTip">
            <summary>
            true to display a tooltip when the user hovers over a region's split bar (defaults to false). The tooltip text will be the value of either SplitTip or CollapsibleSplitTip as appropriate.
            </summary>
        </member>
        <member name="P:ExtAspNet.Region.SplitTip">
            <summary>
            The tooltip to display when the user hovers over a non-collapsible region's split bar (defaults to 'Drag to resize.'). Only applies if EnableSplitTip = true.
            </summary>
        </member>
        <member name="P:ExtAspNet.Region.CollapsibleSplitTip">
            <summary>
            The tooltip to display when the user hovers over a collapsible region's split bar (defaults to 'Drag to resize. Double click to hide.'). Only applies if EnableSplitTip = true.
            </summary>
        </member>
        <member name="P:ExtAspNet.Region.Margins">
            <summary>
            边距
            </summary>
        </member>
        <member name="P:ExtAspNet.Region.CMargins">
            <summary>
            折叠后的边距
            </summary>
        </member>
        <member name="P:ExtAspNet.Region.Position">
            <summary>
            位置
            </summary>
        </member>
        <member name="P:ExtAspNet.Region.CollapseMode">
            <summary>
            Collapse Mode.
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeCheckEventArgs.Node">
            <summary>
            Tree node.
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeCheckEventArgs.NodeID">
            <summary>
            Tree Node id.
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlWeb">
            <summary>
            A utility class to get HTML document from HTTP.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlWeb.PreRequest">
            <summary>
            Occurs before an HTTP request is executed.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlWeb.PostResponse">
            <summary>
            Occurs after an HTTP request has been executed.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.HtmlWeb.PreHandleDocument">
            <summary>
            Occurs before an HTML document is handled.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.HtmlWeb.#ctor">
            <summary>
            Creates an instance of an HtmlWeb class.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.HtmlWeb.Get(System.String,System.String)">
            <summary>
            Gets an HTML document from an Internet resource and saves it to the specified file.
            </summary>
            <param name="url">The requested URL, such as "http://Myserver/Mypath/Myfile.asp".</param>
            <param name="path">The location of the file where you want to save the document.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlWeb.Get(System.String,System.String,System.String)">
            <summary>
            Gets an HTML document from an Internet resource and saves it to the specified file.
            </summary>
            <param name="url">The requested URL, such as "http://Myserver/Mypath/Myfile.asp".</param>
            <param name="path">The location of the file where you want to save the document.</param>
            <param name="method">The HTTP method used to open the connection, such as GET, POST, PUT, or PROPFIND.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlWeb.Load(System.String)">
            <summary>
            Gets an HTML document from an Internet resource.
            </summary>
            <param name="url">The requested URL, such as "http://Myserver/Mypath/Myfile.asp".</param>
            <returns>A new HTML document.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlWeb.Load(System.String,System.String)">
            <summary>
            Loads an HTML document from an Internet resource.
            </summary>
            <param name="url">The requested URL, such as "http://Myserver/Mypath/Myfile.asp".</param>
            <param name="method">The HTTP method used to open the connection, such as GET, POST, PUT, or PROPFIND.</param>
            <returns>A new HTML document.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlWeb.GetCachePath(System.Uri)">
            <summary>
            Gets the cache file path for a specified url.
            </summary>
            <param name="uri">The url fo which to retrieve the cache path. May not be null.</param>
            <returns>The cache file path.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlWeb.GetExtensionForContentType(System.String,System.String)">
            <summary>
            Gets the path extension for a given MIME content type.
            </summary>
            <param name="contentType">The input MIME content type.</param>
            <param name="def">The default path extension to return if any error occurs.</param>
            <returns>The MIME content type's path extension.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlWeb.GetContentTypeForExtension(System.String,System.String)">
            <summary>
            Gets the MIME content type for a given path extension.
            </summary>
            <param name="extension">The input path extension.</param>
            <param name="def">The default content type to return if any error occurs.</param>
            <returns>The path extention's MIME content type.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlWeb.LoadHtmlAsXml(System.String,System.Xml.XmlTextWriter)">
            <summary>
            Loads an HTML document from an Internet resource and saves it to the specified XmlTextWriter.
            </summary>
            <param name="htmlUrl">The requested URL, such as "http://Myserver/Mypath/Myfile.asp".</param>
            <param name="writer">The XmlTextWriter to which you want to save.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlWeb.LoadHtmlAsXml(System.String,System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlTextWriter)">
            <summary>
            Loads an HTML document from an Internet resource and saves it to the specified XmlTextWriter, after an XSLT transformation.
            </summary>
            <param name="htmlUrl">The requested URL, such as "http://Myserver/Mypath/Myfile.asp".</param>
            <param name="xsltUrl">The URL that specifies the XSLT stylesheet to load.</param>
            <param name="xsltArgs">An XsltArgumentList containing the namespace-qualified arguments used as input to the transform.</param>
            <param name="writer">The XmlTextWriter to which you want to save.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlWeb.LoadHtmlAsXml(System.String,System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlTextWriter,System.String)">
            <summary>
            Loads an HTML document from an Internet resource and saves it to the specified XmlTextWriter, after an XSLT transformation.
            </summary>
            <param name="htmlUrl">The requested URL, such as "http://Myserver/Mypath/Myfile.asp". May not be null.</param>
            <param name="xsltUrl">The URL that specifies the XSLT stylesheet to load.</param>
            <param name="xsltArgs">An XsltArgumentList containing the namespace-qualified arguments used as input to the transform.</param>
            <param name="writer">The XmlTextWriter to which you want to save.</param>
            <param name="xmlPath">A file path where the temporary XML before transformation will be saved. Mostly used for debugging purposes.</param>
        </member>
        <member name="M:HtmlAgilityPack.HtmlWeb.CreateInstance(System.String,System.Type)">
            <summary>
            Creates an instance of the given type from the specified Internet resource.
            </summary>
            <param name="url">The requested URL, such as "http://Myserver/Mypath/Myfile.asp".</param>
            <param name="type">The requested type.</param>
            <returns>An newly created instance.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlWeb.CreateInstance(System.String,System.String,System.Xml.Xsl.XsltArgumentList,System.Type)">
            <summary>
            Creates an instance of the given type from the specified Internet resource.
            </summary>
            <param name="htmlUrl">The requested URL, such as "http://Myserver/Mypath/Myfile.asp".</param>
            <param name="xsltUrl">The URL that specifies the XSLT stylesheet to load.</param>
            <param name="xsltArgs">An XsltArgumentList containing the namespace-qualified arguments used as input to the transform.</param>
            <param name="type">The requested type.</param>
            <returns>An newly created instance.</returns>
        </member>
        <member name="M:HtmlAgilityPack.HtmlWeb.CreateInstance(System.String,System.String,System.Xml.Xsl.XsltArgumentList,System.Type,System.String)">
            <summary>
            Creates an instance of the given type from the specified Internet resource.
            </summary>
            <param name="htmlUrl">The requested URL, such as "http://Myserver/Mypath/Myfile.asp".</param>
            <param name="xsltUrl">The URL that specifies the XSLT stylesheet to load.</param>
            <param name="xsltArgs">An XsltArgumentList containing the namespace-qualified arguments used as input to the transform.</param>
            <param name="type">The requested type.</param>
            <param name="xmlPath">A file path where the temporary XML before transformation will be saved. Mostly used for debugging purposes.</param>
            <returns>An newly created instance.</returns>
        </member>
        <member name="P:HtmlAgilityPack.HtmlWeb.FromCache">
            <summary>
            Gets a value indicating if the last document was retrieved from the cache.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlWeb.ResponseUri">
            <summary>
            Gets the URI of the Internet resource that actually responded to the request.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlWeb.CacheOnly">
            <summary>
            Gets or Sets a value indicating whether to get document only from the cache.
            If this is set to true and document is not found in the cache, nothing will be loaded.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlWeb.UseCookies">
            <summary>
            Gets or Sets a value indicating if cookies will be stored.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlWeb.RequestDuration">
            <summary>
            Gets the last request duration in milliseconds.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlWeb.AutoDetectEncoding">
            <summary>
            Gets or Sets a value indicating if document encoding must be automatically detected.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlWeb.StatusCode">
            <summary>
            Gets the last request status.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlWeb.StreamBufferSize">
            <summary>
            Gets or Sets the size of the buffer used for memory operations.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlWeb.CachePath">
            <summary>
            Gets or Sets the cache path. If null, no caching mechanism will be used.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlWeb.UsingCache">
            <summary>
            Gets or Sets a value indicating whether the caching mechanisms should be used or not.
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlWeb.PreRequestHandler">
            <summary>
            Represents the method that will handle the PreRequest event.
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlWeb.PostResponseHandler">
            <summary>
            Represents the method that will handle the PostResponse event.
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlWeb.PreHandleDocumentHandler">
            <summary>
            Represents the method that will handle the PreHandleDocument event.
            </summary>
        </member>
        <member name="T:ExtAspNet.LinkButtonDesigner">
            <summary>
            按钮设计时
            </summary>
        </member>
        <member name="T:Nii.JSON.JsonFacade">
            <summary>
            Summary description for JsonFacade.
            </summary>
        </member>
        <member name="M:Nii.JSON.JsonFacade.toJSON(System.Collections.IDictionary)">
            <summary>
            Parse a Hashtable and return a JSON formatted string
            </summary>
            <param name="idict"></param>
            <returns></returns>
        </member>
        <member name="M:Nii.JSON.JsonFacade.fromJSON(System.String)">
            <summary>
            Parse JSON formatted string and return a Hashtable
            </summary>
            <param name="sJSON"></param>
            <returns></returns>
        </member>
        <member name="T:Nii.JSON.JSONArray">
             <summary>
             <para>
             A JSONArray is an ordered sequence of values. Its external form is a string
             wrapped in square brackets with commas between the values. The internal form
             is an object having get() and opt() methods for accessing the values by
             index, and put() methods for adding or replacing values. The values can be
             any of these types: Boolean, JSONArray, JSONObject, Number, String, or the
             JSONObject.NULL object.
             </para>
             <para>
             The constructor can convert a JSON external form string into an
             internal form Java object. The toString() method creates an external
             form string.
             </para>
             <para>
             A get() method returns a value if one can be found, and throws an exception
             if one cannot be found. An opt() method returns a default value instead of
             throwing an exception, and so is useful for obtaining optional values.
             </para>
             <para>
             The generic get() and opt() methods return an object which you can cast or
             query for type. There are also typed get() and opt() methods that do typing
             checking and type coersion for you.
            </para>
             <para>
             The texts produced by the toString() methods are very strict.
             The constructors are more forgiving in the texts they will accept.
             </para>
             <para>
             <list type="bullet">
             <item><description>An extra comma may appear just before the closing bracket.</description></item>
             <item><description>Strings may be quoted with single quotes.</description></item>
             <item><description>Strings do not need to be quoted at all if they do not contain leading
                 or trailing spaces, and if they do not contain any of these characters:
                 { } [ ] / \ : , </description></item>
             <item><description>Numbers may have the 0- (octal) or 0x- (hex) prefix.</description></item>
             </list>
             </para>
             <para>
             Public Domain 2002 JSON.org
             @author JSON.org
             @version 0.1
            </para>
             Ported to C# by Are Bjolseth, teleplan.no
             TODO:
             1. Implement Custom exceptions
             2. Add indexer JSONObject[i] = object,     and object = JSONObject[i];
             3. Add indexer JSONObject["key"] = object, and object = JSONObject["key"]
             4. Add unit testing
             5. Add log4net
             6. Make get/put methods private, to force use of indexer instead?
             </summary>
        </member>
        <member name="F:Nii.JSON.JSONArray.myArrayList">
            <summary>The ArrayList where the JSONArray's properties are kept.</summary>
        </member>
        <member name="M:Nii.JSON.JSONArray.#ctor">
            <summary>
            Construct an empty JSONArray
            </summary>
        </member>
        <member name="M:Nii.JSON.JSONArray.#ctor(Nii.JSON.JSONTokener)">
            <summary>
            Construct a JSONArray from a JSONTokener.
            </summary>
            <param name="x">A JSONTokener</param>
        </member>
        <member name="M:Nii.JSON.JSONArray.#ctor(System.String)">
            <summary>
            Construct a JSONArray from a source string.
            </summary>
            <param name="s">A string that begins with '[' and ends with ']'.</param>
        </member>
        <member name="M:Nii.JSON.JSONArray.#ctor(System.Collections.ICollection)">
            <summary>
            Construct a JSONArray from a Collection.
            </summary>
            <param name="collection">A Collection.</param>
        </member>
        <member name="M:Nii.JSON.JSONArray.getValue(System.Int32)">
            <summary>
            Get the object value associated with an index.
            Use indexer instead!!! Added to be true to the original Java implementation
            </summary>
            <param name="i">index subscript. The index must be between 0 and length()-1</param>
            <returns>An object value.</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.getArrayList">
            <summary>
            Get the ArrayList which is holding the elements of the JSONArray.
            Use the indexer instead!! Added to be true to the orignal Java src
            </summary>
            <returns>The ArrayList</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.getBoolean(System.Int32)">
            <summary>
            Get the boolean value associated with an index.
            The string values "true" and "false" are converted to boolean.
            </summary>
            <param name="i">index subscript</param>
            <returns>The truth</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.getDouble(System.Int32)">
            <summary>
            Get the double value associated with an index.
            </summary>
            <param name="i">index subscript</param>
            <returns>A double value</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.getInt(System.Int32)">
            <summary>
            Get the int value associated with an index.
            </summary>
            <param name="i">index subscript</param>
            <returns>The int value</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.getJSONArray(System.Int32)">
            <summary>
            Get the JSONArray associated with an index.
            </summary>
            <param name="i">index subscript</param>
            <returns>A JSONArray value</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.getJSONObject(System.Int32)">
            <summary>
            Get the JSONObject associated with an index.
            </summary>
            <param name="i">index subscript</param>
            <returns>A JSONObject value</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.getString(System.Int32)">
            <summary>
            Get the string associated with an index.
            </summary>
            <param name="i">index subscript</param>
            <returns>A string value.</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.isNull(System.Int32)">
            <summary>
            Determine if the value is null.
            </summary>
            <param name="i">index subscript</param>
            <returns>true if the value at the index is null, or if there is no value.</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.join(System.String)">
            <summary>
            Make a string from the contents of this JSONArray. The separator string
            is inserted between each element.
            Warning: This method assumes that the data structure is acyclical.
            </summary>
            <param name="separator">separator A string that will be inserted between the elements.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.Length">
            <summary>
            Get the length of the JSONArray.
            Added to be true to the original Java implementation
            </summary>
            <returns>Number of JSONObjects in array</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.opt(System.Int32)">
            <summary>
            Get the optional object value associated with an index.
            </summary>
            <param name="i">index subscript</param>
            <returns>object at that index.</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.optBoolean(System.Int32)">
            <summary>
            Get the optional boolean value associated with an index.
            </summary>
            <param name="i">index subscript</param>
            <returns>The truth</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.optBoolean(System.Int32,System.Boolean)">
            <summary>
            Get the optional boolean value associated with an index.
            It returns the defaultValue if there is no value at that index or if it is not
            a Boolean or the String "true" or "false".
            </summary>
            <param name="i">index subscript</param>
            <param name="defaultValue"></param>
            <returns>The truth.</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.optDouble(System.Int32)">
            <summary>
            Get the optional double value associated with an index.
            NaN is returned if the index is not found,
            or if the value is not a number and cannot be converted to a number.
            </summary>
            <param name="i">index subscript</param>
            <returns>The double value object</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.optDouble(System.Int32,System.Double)">
            <summary>
            Get the optional double value associated with an index.
            NaN is returned if the index is not found,
            or if the value is not a number and cannot be converted to a number.
            </summary>
            <param name="i">index subscript</param>
            <param name="defaultValue"></param>
            <returns>The double value object</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.optInt(System.Int32)">
            <summary>
            Get the optional int value associated with an index.
            Zero is returned if the index is not found,
            or if the value is not a number and cannot be converted to a number.
            </summary>
            <param name="i">index subscript</param>
            <returns>The int value object</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.optInt(System.Int32,System.Int32)">
            <summary>
            Get the optional int value associated with an index.
            The defaultValue is returned if the index is not found,
            or if the value is not a number and cannot be converted to a number.
            </summary>
            <param name="i">index subscript</param>
            <param name="defaultValue">The default value</param>
            <returns>The int value object</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.optJSONArray(System.Int32)">
            <summary>
            Get the optional JSONArray associated with an index.
            </summary>
            <param name="i">index subscript</param>
            <returns>A JSONArray value, or null if the index has no value, or if the value is not a JSONArray.</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.optJSONObject(System.Int32)">
            <summary>
            Get the optional JSONObject associated with an index.
            Null is returned if the key is not found, or null if the index has
            no value, or if the value is not a JSONObject.
            </summary>
            <param name="i">index subscript</param>
            <returns>A JSONObject value</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.optString(System.Int32)">
            <summary>
            Get the optional string value associated with an index. It returns an
            empty string if there is no value at that index. If the value
            is not a string and is not null, then it is coverted to a string.
            </summary>
            <param name="i">index subscript</param>
            <returns>A String value</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.optString(System.Int32,System.String)">
            <summary>
            Get the optional string associated with an index.
            The defaultValue is returned if the key is not found.
            </summary>
            <param name="i">index subscript</param>
            <param name="defaultValue">The default value</param>
            <returns>A string value</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.put(System.Object)">
            OMITTED:
            public JSONArray put(bool val)
            public JSONArray put(double val)
            public JSONArray put(int val)		
            <summary>
            Append an object value.
            </summary>
            <param name="val">An object value.  The value should be a Boolean, Double, Integer, JSONArray, JSObject, or String, or the JSONObject.NULL object</param>
            <returns>this (JSONArray)</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.put(System.Int32,System.Object)">
            <summary>
            Put or replace a boolean value in the JSONArray.
            </summary>
            <param name="i">
            The subscript. If the index is greater than the length of
            the JSONArray, then null elements will be added as necessary to pad it out.
            </param>
            <param name="val">An object value.</param>
            <returns>this (JSONArray)</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.toJSONObject(Nii.JSON.JSONArray)">
            <summary>
            Produce a JSONObject by combining a JSONArray of names with the values
            of this JSONArray.
            </summary>
            <param name="names">
            A JSONArray containing a list of key strings. These will be paired with the values.
            </param>
            <returns>A JSONObject, or null if there are no names or if this JSONArray</returns>
        </member>
        <member name="M:Nii.JSON.JSONArray.ToString">
            <summary>
            Make an JSON external form string of this JSONArray. For compactness, no
            unnecessary whitespace is added.
            </summary>
            <returns>a printable, displayable, transmittable representation of the array.</returns>
        </member>
        <member name="P:Nii.JSON.JSONArray.Item(System.Int32)">
            <summary>
            Alternate to Java get/put method, by using indexer
            </summary>
        </member>
        <member name="P:Nii.JSON.JSONArray.List">
            <summary>
            Alternativ to Java, getArrayList, by using propery
            </summary>
        </member>
        <member name="P:Nii.JSON.JSONArray.Count">
            <summary>
            Get the length of the JSONArray.
            Using a propery instead of method
            </summary>
        </member>
        <member name="T:ExtAspNet.PageManager">
            <summary>
            页面配置管理，每个页面必须包含一个PageManager控件
            </summary>
        </member>
        <member name="M:ExtAspNet.PageManager.RegisterOnAjaxPostBack(System.String,System.String)">
            <summary>
            Used by FCKeditor, Add script before ajax postback.
            </summary>
            <param name="key"></param>
            <param name="script"></param>
        </member>
        <member name="P:ExtAspNet.PageManager.Enabled">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.PageManager.Hidden">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.PageManager.HideMode">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.PageManager.AutoSizePanelID">
            <summary>
            自动调整此容器的宽度和高度，以填充整个页面
            </summary>
        </member>
        <member name="P:ExtAspNet.PageManager.HideScrollbar">
            <summary>
            是否隐藏滚动条
            </summary>
        </member>
        <member name="P:ExtAspNet.PageManager.ExecuteOnReadyWhenPostBack">
            <summary>
            每次页面回发时总是执行onReady脚本（包括Ajax局部回发）
            </summary>
        </member>
        <member name="P:ExtAspNet.PageManager.EnablePageLoading">
            <summary>
            是否启用页面加载标示
            </summary>
        </member>
        <member name="P:ExtAspNet.PageManager.EnableAjaxLoading">
            <summary>
            是否启用Ajax加载标示
            </summary>
        </member>
        <member name="P:ExtAspNet.PageManager.Theme">
            <summary>
            样式
            </summary>
        </member>
        <member name="P:ExtAspNet.PageManager.Language">
            <summary>
            语言
            </summary>
        </member>
        <member name="P:ExtAspNet.PageManager.FormMessageTarget">
            <summary>
            表单中消息的位置
            </summary>
        </member>
        <member name="P:ExtAspNet.PageManager.FormOffsetRight">
            <summary>
            表单中右侧的空白宽度
            </summary>
        </member>
        <member name="P:ExtAspNet.PageManager.FormLabelWidth">
            <summary>
            表单中标签的宽度
            </summary>
        </member>
        <member name="P:ExtAspNet.PageManager.EnableAjax">
            <summary>
            是否启用Ajax
            </summary>
        </member>
        <member name="P:ExtAspNet.PageManager.AjaxTimeout">
            <summary>
            Ajax超时时间（单位：秒，默认：60秒）
            </summary>
        </member>
        <member name="P:ExtAspNet.PageManager.PageLoadingControlExist">
            <summary>
            PageLoading控件是否存在页面
            </summary>
        </member>
        <member name="M:ExtAspNet.ActiveWindow.GetWriteBackValueReference(System.String[])">
            <summary>
            将value值写回controlClientId控件中
            </summary>
            <param name="controlClientId"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ActiveWindow.GetHideReference">
            <summary>
            取得关闭当前激活Window的JS脚本
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ActiveWindow.GetHideRefreshReference">
            <summary>
            取得关闭当前激活Window的JS脚本
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ActiveWindow.GetHidePostBackReference">
            <summary>
            取得关闭当前激活Window的JS脚本
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ActiveWindow.GetHidePostBackReference(System.String)">
            <summary>
            取得关闭当前激活Window的JS脚本
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ActiveWindow.GetConfirmHideReference">
            <summary>
            先确认当前页面中表单是否更改，然后关闭当前激活Ext-Window
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ActiveWindow.GetConfirmHideRefreshReference">
            <summary>
            先确认当前页面中表单是否更改，然后关闭当前激活Ext-Window，然后刷新父页面
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ActiveWindow.GetConfirmHidePostBackReference">
            <summary>
            先确认当前页面中表单是否更改，然后关闭当前激活Ext-Window，然后回发父页面
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ActiveWindow.GetConfirmHidePostBackReference(System.String)">
            <summary>
            先确认当前页面中表单是否更改，然后关闭当前激活Ext-Window，然后回发父页面
            </summary>
            <returns></returns>
        </member>
        <member name="T:HtmlAgilityPack.MixedCodeDocumentFragmentList">
            <summary>
            Represents a list of mixed code fragments.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocumentFragmentList.Append(HtmlAgilityPack.MixedCodeDocumentFragment)">
            <summary>
            Appends a fragment to the list of fragments.
            </summary>
            <param name="newFragment">The fragment to append. May not be null.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocumentFragmentList.Prepend(HtmlAgilityPack.MixedCodeDocumentFragment)">
            <summary>
            Prepends a fragment to the list of fragments.
            </summary>
            <param name="newFragment">The fragment to append. May not be null.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocumentFragmentList.Remove(HtmlAgilityPack.MixedCodeDocumentFragment)">
            <summary>
            Remove a fragment from the list of fragments. If this fragment was not in the list, an exception will be raised.
            </summary>
            <param name="fragment">The fragment to remove. May not be null.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocumentFragmentList.RemoveAt(System.Int32)">
            <summary>
            Remove a fragment from the list of fragments, using its index in the list.
            </summary>
            <param name="index">The index of the fragment to remove.</param>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocumentFragmentList.RemoveAll">
            <summary>
            Remove all fragments from the list.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocumentFragmentList.GetEnumerator">
            <summary>
            Gets an enumerator that can iterate through the fragment list.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocumentFragmentList.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that can iterate through the fragment list.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.MixedCodeDocumentFragmentList.Count">
            <summary>
            Gets the number of fragments contained in the list.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.MixedCodeDocumentFragmentList.Item(System.Int32)">
            <summary>
            Gets a fragment from the list using its index.
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.MixedCodeDocumentFragmentList.MixedCodeDocumentFragmentEnumerator">
            <summary>
            Represents a fragment enumerator.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocumentFragmentList.MixedCodeDocumentFragmentEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.MixedCodeDocumentFragmentList.MixedCodeDocumentFragmentEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="P:HtmlAgilityPack.MixedCodeDocumentFragmentList.MixedCodeDocumentFragmentEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.MixedCodeDocumentFragmentList.MixedCodeDocumentFragmentEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlNodeCollection">
            <summary>
            Represents a combined list and collection of HTML nodes.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the list.
            </summary>
            <returns>An IEnumerator for the entire list.</returns>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNodeCollection.Count">
            <summary>
            Gets the number of elements actually contained in the list.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNodeCollection.Item(System.Int32)">
            <summary>
            Gets the node at the specified index.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNodeCollection.Item(HtmlAgilityPack.HtmlNode)">
            <summary>
            Gets a given node from the list.
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlNodeCollection.HtmlNodeEnumerator">
            <summary>
            Represents an enumerator that can iterate through the list.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeCollection.HtmlNodeEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="M:HtmlAgilityPack.HtmlNodeCollection.HtmlNodeEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>true if the enumerator was successfully advanced to the next element, false if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNodeCollection.HtmlNodeEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlNodeCollection.HtmlNodeEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
        </member>
        <member name="P:ExtAspNet.TreeDesigner.CurrentControl">
            <summary>
            Current Control
            </summary>
        </member>
        <member name="T:ExtAspNet.TextBoxDesigner">
            <summary>
            按钮设计时
            </summary>
        </member>
        <member name="P:ExtAspNet.TabStripDesigner.CurrentControl">
            <summary>
            Current Control
            </summary>
        </member>
        <member name="M:ExtAspNet.Alert.Show(System.String)">
            <summary>
            显示消息框
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ExtAspNet.Alert.Show(System.String,System.String)">
            <summary>
            显示消息框
            </summary>
            <param name="message"></param>
            <param name="title"></param>
        </member>
        <member name="M:ExtAspNet.Alert.Show(System.String,ExtAspNet.MessageBoxIcon)">
            <summary>
            显示消息框
            </summary>
            <param name="message"></param>
            <param name="icon"></param>
        </member>
        <member name="M:ExtAspNet.Alert.Show(System.String,System.String,ExtAspNet.MessageBoxIcon,System.String)">
            <summary>
            显示消息框
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <param name="icon"></param>
        </member>
        <member name="M:ExtAspNet.Alert.ShowInParent(System.String)">
            <summary>
            在父页面中显示消息框
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ExtAspNet.Alert.ShowInParent(System.String,System.String)">
            <summary>
            在父页面中显示消息框
            </summary>
            <param name="message"></param>
            <param name="title"></param>
        </member>
        <member name="M:ExtAspNet.Alert.ShowInParent(System.String,ExtAspNet.MessageBoxIcon)">
            <summary>
            在父页面中显示消息框
            </summary>
            <param name="message"></param>
            <param name="icon"></param>
        </member>
        <member name="M:ExtAspNet.Alert.ShowInParent(System.String,System.String,ExtAspNet.MessageBoxIcon,System.String)">
            <summary>
            在父页面中显示消息框
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <param name="icon"></param>
        </member>
        <member name="M:ExtAspNet.Alert.ShowInTop(System.String)">
            <summary>
            在顶层窗口中显示消息框
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ExtAspNet.Alert.ShowInTop(System.String,System.String)">
            <summary>
            在顶层窗口中显示消息框
            </summary>
            <param name="message"></param>
            <param name="title"></param>
        </member>
        <member name="M:ExtAspNet.Alert.ShowInTop(System.String,ExtAspNet.MessageBoxIcon)">
            <summary>
            在顶层窗口中显示消息框
            </summary>
            <param name="message"></param>
            <param name="icon"></param>
        </member>
        <member name="M:ExtAspNet.Alert.ShowInTop(System.String,System.String,ExtAspNet.MessageBoxIcon,System.String)">
            <summary>
            在顶层窗口中显示消息框
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <param name="icon"></param>
        </member>
        <member name="M:ExtAspNet.Alert.GetShowReference(System.String)">
            <summary>
            取得显示消息框引用
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Alert.GetShowInParentReference(System.String)">
            <summary>
            取得显示消息框引用
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Alert.GetShowInParentReference(System.String,System.String)">
            <summary>
            取得显示消息框引用
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Alert.GetShowInParentReference(System.String,ExtAspNet.MessageBoxIcon)">
            <summary>
            取得显示消息框引用
            </summary>
            <param name="message"></param>
            <param name="icon"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Alert.GetShowInParentReference(System.String,System.String,ExtAspNet.MessageBoxIcon)">
            <summary>
            取得显示消息框引用
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <param name="icon"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Alert.GetShowInParentReference(System.String,System.String,ExtAspNet.MessageBoxIcon,System.String)">
            <summary>
            取得显示消息框引用
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <param name="icon"></param>
            <param name="okScript"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Alert.GetShowInTopReference(System.String)">
            <summary>
            取得显示消息框引用
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Alert.GetShowInTopReference(System.String,System.String)">
            <summary>
            取得显示消息框引用
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Alert.GetShowInTopReference(System.String,ExtAspNet.MessageBoxIcon)">
            <summary>
            取得显示消息框引用
            </summary>
            <param name="message"></param>
            <param name="icon"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Alert.GetShowInTopReference(System.String,System.String,ExtAspNet.MessageBoxIcon)">
            <summary>
            取得显示消息框引用
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <param name="icon"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Alert.GetShowInTopReference(System.String,System.String,ExtAspNet.MessageBoxIcon,System.String)">
            <summary>
            取得显示消息框引用
            </summary>
            <param name="message"></param>
            <param name="title"></param>
            <param name="icon"></param>
            <param name="okScript"></param>
            <returns></returns>
        </member>
        <member name="T:ExtAspNet.ButtonAlign">
            <summary>
            按钮排列位置
            </summary>
        </member>
        <member name="T:ExtAspNet.ButtonAlignHelper">
            <summary>
            按钮排列位置名称
            </summary>
        </member>
        <member name="T:ExtAspNet.ScriptBlock">
            <summary>
            控件-控件相关脚本
            </summary>
        </member>
        <member name="P:ExtAspNet.ScriptBlock.Control">
            <summary>
            要注册脚本的控件
            </summary>
        </member>
        <member name="P:ExtAspNet.ScriptBlock.Script">
            <summary>
            脚本
            </summary>
        </member>
        <member name="P:ExtAspNet.ScriptBlock.ExtraScript">
            <summary>
            额外的脚本
            </summary>
        </member>
        <member name="T:ExtAspNet.Label">
            <summary>
            文本控件
            </summary>
        </member>
        <member name="P:ExtAspNet.Label.Enabled">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Label.TabIndex">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Label.FocusOnPageLoad">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Label.EncodeText">
            <summary>
            是否对文本编码
            </summary>
        </member>
        <member name="P:ExtAspNet.Label.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.MixedCodeDocumentFragmentType">
            <summary>
            Represents the type of fragement in a mixed code document.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.MixedCodeDocumentFragmentType.Code">
            <summary>
            The fragment contains code.
            </summary>
        </member>
        <member name="F:HtmlAgilityPack.MixedCodeDocumentFragmentType.Text">
            <summary>
            The fragment contains text.
            </summary>
        </member>
        <member name="T:ExtAspNet.DatePickerDesigner">
            <summary>
            按钮设计时
            </summary>
        </member>
        <member name="M:ExtAspNet.ObjectUtil.GetPropertyValue(System.Object,System.String)">
            <summary>
            取得属性的值
            </summary>
            <param name="obj">可能是DataRowView或一个对象</param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ObjectUtil.GetPropertyValueFormObject(System.Object,System.String)">
            <summary>
            Get the property from an object.
            The property can be "Color", "BodyStyle" or "Info.UserName".
            </summary>
            <param name="obj"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="T:ExtAspNet.TabPosition">
            <summary>
            Tab显示的位置
            </summary>
        </member>
        <member name="T:ExtAspNet.TabPositionHelper">
            <summary>
            Tab显示的位置名称
            </summary>
        </member>
        <member name="T:ExtAspNet.ToolbarPosition">
            <summary>
            工具条的位置
            </summary>
        </member>
        <member name="T:ExtAspNet.ExtDateTimeConvertor">
            <summary>
            Ext-JS 和 DotNet之间的日期格式定义转换
            </summary>
        </member>
        <member name="M:ExtAspNet.ExtDateTimeConvertor.GetExtDateObject(System.DateTime)">
            <summary>
            创建Javascript的Date对象字符串
            注意：这个地方有一个bug，要把月份减一才正确，晕
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ExtDateTimeConvertor.ConvertToExtDateFormat(System.String)">
            <summary>
            将dotnet日期格式字符串转换为extjs的日期格式字符串
            </summary>
            <param name="dotnetFormat"></param>
            <returns></returns>
        </member>
        <member name="T:ExtAspNet.HtmlEditor">
            <summary>
            HTML编辑框控件
            </summary>
        </member>
        <member name="M:ExtAspNet.HtmlEditor.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            回发到服务器，判断控件的属性是否变化，
            如果变化返回true，则RaisePostDataChangedEvent
            </summary>
            <param name="postDataKey"></param>
            <param name="postCollection"></param>
            <returns></returns>
        </member>
        <member name="P:ExtAspNet.HtmlEditor.Enabled">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.HtmlEditor.Readonly">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.HtmlEditor.Text">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:ExtAspNet.HtmlEditor.EnableAlignments">
            <summary>
            启用左右定位
            </summary>
        </member>
        <member name="P:ExtAspNet.HtmlEditor.EnableColors">
            <summary>
            启用颜色
            </summary>
        </member>
        <member name="P:ExtAspNet.HtmlEditor.EnableFont">
            <summary>
            启用字体
            </summary>
        </member>
        <member name="P:ExtAspNet.HtmlEditor.EnableFontSize">
            <summary>
            启用调整字体大小
            </summary>
        </member>
        <member name="P:ExtAspNet.HtmlEditor.EnableFormat">
            <summary>
            启用格式化
            </summary>
        </member>
        <member name="P:ExtAspNet.HtmlEditor.EnableLinks">
            <summary>
            启用创建链接
            </summary>
        </member>
        <member name="P:ExtAspNet.HtmlEditor.EnableLists">
            <summary>
            启用创建列表
            </summary>
        </member>
        <member name="P:ExtAspNet.HtmlEditor.EnableSourceEdit">
            <summary>
            启用源码视图
            </summary>
        </member>
        <member name="P:ExtAspNet.HtmlEditor.FontFamilies">
            <summary>
            字体列表
            </summary>
        </member>
        <member name="E:ExtAspNet.HtmlEditor.TextChanged">
            <summary>
            文本发生变化
            </summary>
        </member>
        <member name="P:ExtAspNet.ListItem.Selected">
            <summary>
            是否选中
            </summary>
        </member>
        <member name="P:ExtAspNet.ListItem.Text">
            <summary>
            显示的文本
            </summary>
        </member>
        <member name="P:ExtAspNet.ListItem.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="P:ExtAspNet.ListItem.EnableSelect">
            <summary>
            是否可选择
            </summary>
        </member>
        <member name="P:ExtAspNet.ListItem.SimulateTreeLevel">
            <summary>
            模拟树的层次（从0开始为根节点）
            </summary>
        </member>
        <member name="T:ExtAspNet.Grid">
            <summary>
            表格控件
            </summary>
        </member>
        <member name="M:ExtAspNet.Grid.ResolveStartEndRowIndex(System.Int32@,System.Int32@)">
            <summary>
            Get the start and end row index rendering in current request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Grid.DataBind">
            <summary>
            Bind to datasource.
            </summary>
        </member>
        <member name="M:ExtAspNet.Grid.GetHasSelectionReference">
            <summary>
            是否至少选中一项的JS代码
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Grid.GetSelectCountReference">
            <summary>
            取得选中项数的JS代码
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Grid.GetNoSelectionAlertReference(System.String)">
            <summary>
            没有选中任何一项时弹出对话框的JS代码
            </summary>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Grid.GetNoSelectionAlertInParentReference(System.String)">
            <summary>
            没有选中任何一项时在父页面弹出对话框的JS代码
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Grid.FindColumn(System.String)">
            <summary>
            Find grid column by id.
            </summary>
            <param name="columnId"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.Grid.GetPrefixColumnNumber">
            <summary>
            获取Columns前面的列（比如序号列，选择框列）
            </summary>
            <returns></returns>
        </member>
        <member name="P:ExtAspNet.Grid.Items">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.EnableIFrame">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.IFrameUrl">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.IFrameName">
            <summary>
            不支持此属性
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.Layout">
            <summary>
            布局类型
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.AllowPaging">
            <summary>
            允许服务器端分页
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.IsDatabasePaging">
            <summary>
            是否数据库分页
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.PageSize">
            <summary>
            每页显示项数
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.PageIndex">
            <summary>
            当前显示页序号
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.RecordCount">
            <summary>
            记录的总个数
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.AllowSorting">
            <summary>
            允许服务器端排序
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.SortDirection">
            <summary>
            排序方向("ASC", "DESC")
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.SortColumnIndex">
            <summary>
            当前按照第几列排序
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.AutoPostBack">
            <summary>
            是否自动回发（单击行）
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.EnableDelayRender">
            <summary>
            是否延迟渲染
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.EnableRowNumber">
            <summary>
            启用行序号
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.ShowGridHeader">
            <summary>
            显示表格表头
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.EnableAlternateRowColor">
            <summary>
            启用交替行显示不同的颜色
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.EnableMouseOverColor">
            <summary>
            启用鼠标移动到行的颜色
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.EnableCheckBoxSelect">
            <summary>
            启用多选框
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.EnableMultiSelect">
            <summary>
            启用多行选择
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.SelectedRowIndexArray">
            <summary>
            选中行
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.HiddenColumnIndexArray">
            <summary>
            隐藏的列
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.DataSource">
            <summary>
            数据源
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.DataKeyNames">
            <summary>
            行关键字段
            </summary>
        </member>
        <member name="P:ExtAspNet.Grid.DataKeys">
            <summary>
            行关键字段的值
            </summary>
        </member>
        <member name="E:ExtAspNet.Grid.Sort">
            <summary>
            排序事件
            </summary>
        </member>
        <member name="E:ExtAspNet.Grid.PreRowDataBound">
            <summary>
            行绑定前事件
            </summary>
        </member>
        <member name="E:ExtAspNet.Grid.RowDataBound">
            <summary>
            行绑定后事件
            </summary>
        </member>
        <member name="E:ExtAspNet.Grid.RowCommand">
            <summary>
            行内事件
            </summary>
        </member>
        <member name="E:ExtAspNet.Grid.PageIndexChange">
            <summary>
            分页跳转事件
            </summary>
        </member>
        <member name="E:ExtAspNet.Grid.RowClick">
            <summary>
            行点击事件（需要启用AutoPostBack）
            </summary>
        </member>
        <member name="T:HtmlAgilityPack.HtmlCommentNode">
            <summary>
            Represents an HTML comment.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlCommentNode.InnerHtml">
            <summary>
            Gets or Sets the HTML between the start and end tags of the object. In the case of a text node, it is equals to OuterHtml.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlCommentNode.OuterHtml">
            <summary>
            Gets or Sets the object and its content in HTML.
            </summary>
        </member>
        <member name="P:HtmlAgilityPack.HtmlCommentNode.Comment">
            <summary>
            Gets or Sets the comment text of the node.
            </summary>
        </member>
        <member name="P:ExtAspNet.ContentPanelDesigner.CurrentControl">
            <summary>
            Current Control
            </summary>
        </member>
        <member name="M:ExtAspNet.ControlUtil.FindParentControl(System.Web.UI.Control,System.Type)">
            <summary>
            
            </summary>
            <param name="control"></param>
            <param name="controlType"></param>
            <returns></returns>
        </member>
        <member name="M:ExtAspNet.ControlUtil.FindControl(System.Web.UI.Control,System.String)">
            <summary>
            在 control 的所有子控件中查找控件
            </summary>
            <param name="parentControl"></param>
            <param name="controlId"></param>
            <returns></returns>
        </member>
        <member name="T:ExtAspNet.SimulateTreeHeper">
            <summary>
            Used by Grid and Tree.
            </summary>
        </member>
        <member name="M:ExtAspNet.SimulateTreeHeper.ResolveSimulateTree(System.Collections.Generic.List{ExtAspNet.SimulateTreeNode},System.Boolean)">
            <summary>
            Calculate tree.
            </summary>
            <param name="silumateTreeNodes"></param>
            <param name="postfixOriginalContent"></param>
        </member>
        <member name="T:ExtAspNet.HideMode">
            <summary>
            隐藏的模式
            </summary>
        </member>
        <member name="T:ExtAspNet.HideModeName">
            <summary>
            隐藏的模式名称
            </summary>
        </member>
    </members>
</doc>
